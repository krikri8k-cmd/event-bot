#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏–π —Å –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
"""

import asyncio
import logging
import os

from sqlalchemy import text

from config import load_settings
from database import get_engine, init_engine
from utils.simple_timezone import get_city_from_coordinates

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def test_parser_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π"""
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ü–ê–†–°–ò–ù–ì–ê –° –ù–û–í–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–û–ô")
    print("=" * 60)

    settings = load_settings()
    init_engine(settings.database_url)
    engine = get_engine()

    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_lat = -8.675326
    test_lng = 115.230191
    test_city = get_city_from_coordinates(test_lat, test_lng)

    print(f"üìç –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({test_lat}, {test_lng})")
    print(f"üåç –û–ø—Ä–µ–¥–µ–ª–µ–Ω –≥–æ—Ä–æ–¥: {test_city}")
    print()

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("1Ô∏è‚É£ –ù–ê–°–¢–†–û–ô–ö–ò –ü–ê–†–°–ï–†–û–í")
    print("-" * 30)

    baliforum_enabled = os.getenv("ENABLE_BALIFORUM", "0").strip() == "1"
    ai_generate = os.getenv("AI_GENERATE_SYNTHETIC", "0").strip() == "1"
    ai_parse = os.getenv("AI_PARSE_ENABLE", "0").strip() == "1"

    print(f"üå¥ BaliForum: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if baliforum_enabled else '‚ùå –æ—Ç–∫–ª—é—á–µ–Ω'}")
    print(f"ü§ñ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {'‚úÖ –≤–∫–ª—é—á–µ–Ω–∞' if ai_generate else '‚ùå –æ—Ç–∫–ª—é—á–µ–Ω–∞'}")
    print(f"üß† AI –ø–∞—Ä—Å–∏–Ω–≥: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if ai_parse else '‚ùå –æ—Ç–∫–ª—é—á–µ–Ω'}")
    print()

    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º BaliForum –ø–∞—Ä—Å–µ—Ä
    if baliforum_enabled:
        print("2Ô∏è‚É£ –¢–ï–°–¢ BALIFORUM –ü–ê–†–°–ï–†–ê")
        print("-" * 30)

        try:
            from sources.baliforum_source import BaliForumSource

            source = BaliForumSource()
            print(f"üìã –ò—Å—Ç–æ—á–Ω–∏–∫: {source.display_name}")
            print(f"üåç –°—Ç—Ä–∞–Ω–∞: {source.country_code}")

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
            events = await source.fetch_events(test_lat, test_lng, radius_km=15)
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")

            if events:
                print("üìù –ü—Ä–∏–º–µ—Ä—ã —Å–æ–±—ã—Ç–∏–π:")
                for i, event in enumerate(events[:3], 1):
                    print(f"   {i}. {event['title']}")
                    print(f"      –í—Ä–µ–º—è: {event.get('time_local', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"      –ú–µ—Å—Ç–æ: {event.get('venue', {}).get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                    print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({event['lat']}, {event['lng']})")
                    print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {event['source']}")
                    print()
            else:
                print("‚ö†Ô∏è –°–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ BaliForum: {e}")
            logger.exception("–û—à–∏–±–∫–∞ BaliForum")

        print()

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ë–î
    print("3Ô∏è‚É£ –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ë–î")
    print("-" * 30)

    with engine.connect() as conn:
        # –ü–∞—Ä—Å–µ—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
        parser_result = conn.execute(
            text("""
            SELECT COUNT(*) FROM events_parser
            WHERE city = :city
        """),
            {"city": test_city},
        ).fetchone()

        print(f"üìä –ü–∞—Ä—Å–µ—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –≤ {test_city}: {parser_result[0]}")

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
        user_result = conn.execute(
            text("""
            SELECT COUNT(*) FROM events_user
            WHERE city = :city
        """),
            {"city": test_city},
        ).fetchone()

        print(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π –≤ {test_city}: {user_result[0]}")

        # –í—Å–µ–≥–æ —á–µ—Ä–µ–∑ VIEW
        all_result = conn.execute(
            text("""
            SELECT COUNT(*) FROM events_all
            WHERE city = :city
        """),
            {"city": test_city},
        ).fetchone()

        print(f"üìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π –≤ {test_city}: {all_result[0]}")
        print()

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∏—Å–∫
    print("4Ô∏è‚É£ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –°–û–ë–´–¢–ò–ô")
    print("-" * 30)

    try:
        from utils.ultra_simple_events import UltraSimpleEventsService

        events_service = UltraSimpleEventsService(engine)
        events = events_service.search_events_today(city=test_city, user_lat=test_lat, user_lng=test_lng, radius_km=15)

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º
        sources = {}
        for event in events:
            source = event["source_type"]
            if source not in sources:
                sources[source] = 0
            sources[source] += 1

        print("üìã –ü–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:")
        for source, count in sources.items():
            print(f"   - {source}: {count} —Å–æ–±—ã—Ç–∏–π")

        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")
        logger.exception("–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞")
        print()

    print("=" * 60)
    print("üéØ –í–´–í–û–î:")
    print("‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑:")
    print("   1. –ò—Å—Ç–æ—á–Ω–∏–∫–∏ (BaliForum, KudaGo, AI)")
    print("   2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —á–µ—Ä–µ–∑ fetch_events()")
    print("   3. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ events_parser (–µ—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)")
    print("   4. –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ events_all VIEW")
    print("   5. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≥–æ—Ä–æ–¥—É –∏ —Ä–∞–¥–∏—É—Å—É")
    print()
    print("‚ö†Ô∏è –í–ê–ñ–ù–û:")
    print("   - –ü–∞—Ä—Å–µ—Ä–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –ø–æ–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î")
    print("   - –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ events_parser")
    print("   - –°–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è")


if __name__ == "__main__":
    asyncio.run(test_parser_integration())
