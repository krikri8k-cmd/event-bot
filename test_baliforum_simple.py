#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¢–ó –¥–ª—è Baliforum
"""

import logging
from datetime import UTC, datetime
from zoneinfo import ZoneInfo

from sources.baliforum import _ru_date_to_dt, fetch_baliforum_events

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)


def test_basic_requirements():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¢–ó"""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¢–ó...")

    # 1. –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç
    logger.info("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç...")
    tz = ZoneInfo("Asia/Makassar")
    now = datetime.now(tz)

    # –ü—Ä–æ—Å—Ç—ã–µ —Å–ª—É—á–∞–∏ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å
    start, end = _ru_date_to_dt("—Å–µ–≥–æ–¥–Ω—è 19:00", now, tz)
    if start and start.hour == 19 and start.minute == 0:
        logger.info("  ‚úÖ '—Å–µ–≥–æ–¥–Ω—è 19:00' –ø–∞—Ä—Å–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        logger.error("  ‚ùå '—Å–µ–≥–æ–¥–Ω—è 19:00' –Ω–µ –ø–∞—Ä—Å–∏—Ç—Å—è")
        return False

    # –°–æ–±—ã—Ç–∏—è –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å—Å—è
    start, end = _ru_date_to_dt("—Å–µ–≥–æ–¥–Ω—è", now, tz)
    if start is None:
        logger.info("  ‚úÖ '—Å–µ–≥–æ–¥–Ω—è' –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è")
    else:
        logger.error("  ‚ùå '—Å–µ–≥–æ–¥–Ω—è' –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è")
        return False

    # 2. –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ Baliforum
    logger.info("2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ Baliforum...")
    events = fetch_baliforum_events(limit=10)

    events_with_time = [e for e in events if e.get("start_time")]
    events_without_time = [e for e in events if not e.get("start_time")]

    logger.info(f"  üìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
    logger.info(f"  üìä –° —Ç–æ—á–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º: {len(events_with_time)}")
    logger.info(f"  üìä –ë–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ (–ø—Ä–æ–ø—É—â–µ–Ω—ã): {len(events_without_time)}")

    if len(events_with_time) > 0:
        logger.info("  ‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å–æ–±—ã—Ç–∏—è —Å —Ç–æ—á–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º")
    else:
        logger.error("  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å–æ–±—ã—Ç–∏—è —Å —Ç–æ—á–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º")
        return False

    # 3. –¢–µ—Å—Ç UTC –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
    logger.info("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º UTC –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é...")
    utc_events = 0
    for event in events_with_time:
        start_time = event["start_time"]
        if start_time and start_time.tzinfo == UTC:
            utc_events += 1

    logger.info(f"  üìä –°–æ–±—ã—Ç–∏–π –≤ UTC: {utc_events}/{len(events_with_time)}")

    if utc_events == len(events_with_time):
        logger.info("  ‚úÖ –í—Å–µ —Å–æ–±—ã—Ç–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ UTC")
    else:
        logger.error("  ‚ùå –ù–µ –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≤ UTC")
        return False

    # 4. –¢–µ—Å—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ external_id
    logger.info("4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π external_id...")
    external_ids = [e.get("external_id") for e in events_with_time]
    unique_ids = set(external_ids)

    logger.info(f"  üìä –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö external_id: {len(unique_ids)}/{len(external_ids)}")

    if len(unique_ids) == len(external_ids):
        logger.info("  ‚úÖ –í—Å–µ external_id —É–Ω–∏–∫–∞–ª—å–Ω—ã")
    else:
        logger.error("  ‚ùå –ï—Å—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã external_id")
        return False

    # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    logger.info("5Ô∏è‚É£ –ü—Ä–∏–º–µ—Ä—ã —Å–æ–±—ã—Ç–∏–π:")
    for i, event in enumerate(events_with_time[:3], 1):
        logger.info(f"  {i}. {event['title']}")
        logger.info(f"     –í—Ä–µ–º—è: {event['start_time']}")
        logger.info(f"     External ID: {event.get('external_id', 'N/A')}")
        logger.info(f"     URL: {event['url']}")

    logger.info("üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¢–ó –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
    return True


if __name__ == "__main__":
    success = test_basic_requirements()
    if success:
        logger.info("‚úÖ –¢–ï–°–¢ –ü–†–û–®–ï–õ - Baliforum –≥–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!")
    else:
        logger.error("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ - –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã")
