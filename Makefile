.PHONY: db-apply db-apply-file test-db test-migration

# –ü—Ä–∏–º–µ–Ω–∏—Ç—å –≥–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç (—á–∏—Ç–∞–µ—Ç DATABASE_URL –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
db-apply:
	python scripts/apply_sql.py sql/2025_ics_sources_and_indexes.sql

# –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ª—é–±–æ–π —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: make db-apply-file FILE=path/to.sql
db-apply-file:
	python scripts/apply_sql.py $(FILE)

# –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
test-db:
	python test_db_connection.py

# –¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
test-migration:
	python test_migration.py

# –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞
run-bot:
	python bot_enhanced_v3.py

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ Docker
run-bot-docker:
	docker build -f Dockerfile.bot -t event-bot .
	docker run -p 8000:8000 --env-file .env event-bot

# –î–µ–ø–ª–æ–π –Ω–∞ Railway
deploy-railway:
	@echo "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ Railway..."
	git add .
	git commit -m "feat: update bot deployment"
	git push
	@echo "‚úÖ –ö–æ–¥ –∑–∞–ø—É—à–µ–Ω! –¢–µ–ø–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π Railway UI"

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å health check
test-health:
	python test_health.py

# –û—á–∏—Å—Ç–∫–∞
clean:
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	rm -rf *.egg-info
