#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SQL –º–∏–≥—Ä–∞—Ü–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ
"""

import os
import sys

from sqlalchemy import create_engine, text


def test_migration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ SQL –º–∏–≥—Ä–∞—Ü–∏–∏"""
    db_url = os.environ.get("DATABASE_URL")
    if not db_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏: export DATABASE_URL='postgresql://user:pass@host:port/db?sslmode=require'")
        return False

    sql_file = "sql/2025_ics_sources_and_indexes.sql"
    if not os.path.exists(sql_file):
        print(f"‚ùå –§–∞–π–ª {sql_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False

    print("üîó –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ –ë–î...")
    print(f"üìÑ –ü—Ä–∏–º–µ–Ω—è—é: {sql_file}")

    try:
        engine = create_engine(db_url, future=True, pool_pre_ping=True)

        # –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
        with open(sql_file, encoding="utf-8") as f:
            sql_content = f.read()

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        with engine.begin() as conn:
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –∫–æ–º–∞–Ω–¥—ã
            commands = [cmd.strip() for cmd in sql_content.split(";") if cmd.strip()]

            for i, command in enumerate(commands, 1):
                if command:
                    print(f"  –í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É {i}/{len(commands)}...")
                    try:
                        conn.execute(text(command))
                        print(f"  ‚úÖ –ö–æ–º–∞–Ω–¥–∞ {i} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
                    except Exception as e:
                        print(f"  ‚ö†Ô∏è  –ö–æ–º–∞–Ω–¥–∞ {i}: {e}")
                        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ

        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        with engine.connect() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É event_sources
            result = conn.execute(
                text("""
                SELECT COUNT(*) as count 
                FROM information_schema.tables 
                WHERE table_name = 'event_sources'
            """)
            )
            if result.fetchone()[0] > 0:
                print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ event_sources —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚ùå –¢–∞–±–ª–∏—Ü–∞ event_sources –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
            result = conn.execute(
                text("""
                SELECT indexname 
                FROM pg_indexes 
                WHERE tablename = 'event_sources'
            """)
            )
            indexes = [row[0] for row in result.fetchall()]
            print(f"üìã –ò–Ω–¥–µ–∫—Å—ã event_sources: {', '.join(indexes) if indexes else '–Ω–µ—Ç'}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False


if __name__ == "__main__":
    success = test_migration()
    sys.exit(0 if success else 1)
