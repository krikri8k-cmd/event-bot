#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from bot_enhanced_v3 import update_event_field
from config import load_settings
from database import Event, get_session, init_engine
from simple_status_manager import get_user_events


def test_live_update():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ get_user_events"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = load_settings()
    init_engine(settings.database_url)

    # –ù–∞—Ö–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
    with get_session() as session:
        # –ò—â–µ–º —Å–æ–±—ã—Ç–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "–ü—Ä–æ–±–µ–∂–∫–∞"
        event = session.query(Event).filter(Event.title == "–ü—Ä–æ–±–µ–∂–∫–∞").first()

        if not event:
            print("‚ùå –°–æ–±—ã—Ç–∏–µ '–ü—Ä–æ–±–µ–∂–∫–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return False

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ: ID={event.id}, –ù–∞–∑–≤–∞–Ω–∏–µ='{event.title}', –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä={event.organizer_id}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ get_user_events –î–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ get_user_events –î–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
        events_before = get_user_events(event.organizer_id)
        event_before = next((e for e in events_before if e["id"] == event.id), None)
        if event_before:
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ –î–û: '{event_before['title']}'")
        else:
            print("   –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ get_user_events")
            return False

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        new_title = f"–¢–µ—Å—Ç–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ {datetime.now().strftime('%H:%M:%S')}"
        print(f"üìù –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞: '{new_title}'...")

        success = update_event_field(event.id, "title", new_title, event.organizer_id)

        if success:
            print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ!")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ SQLAlchemy –Ω–∞–ø—Ä—è–º—É—é
            session.refresh(event)
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ –≤ SQLAlchemy: '{event.title}'")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ get_user_events –ü–û–°–õ–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            print("üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ get_user_events –ü–û–°–õ–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
            events_after = get_user_events(event.organizer_id)
            event_after = next((e for e in events_after if e["id"] == event.id), None)
            if event_after:
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ –ü–û–°–õ–ï: '{event_after['title']}'")

                if event_after["title"] == new_title:
                    print("‚úÖ get_user_events –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!")

                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
                    update_event_field(event.id, "title", "–ü—Ä–æ–±–µ–∂–∫–∞", event.organizer_id)
                    print("‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ –æ–±—Ä–∞—Ç–Ω–æ")
                    return True
                else:
                    print("‚ùå get_user_events –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!")
                    print(f"   –û–∂–∏–¥–∞–ª–æ—Å—å: '{new_title}'")
                    print(f"   –ü–æ–ª—É—á–µ–Ω–æ: '{event_after['title']}'")
                    return False
            else:
                print("‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —á–µ—Ä–µ–∑ get_user_events –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
                return False
        else:
            print("‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–µ —É–¥–∞–ª–æ—Å—å")
            return False


if __name__ == "__main__":
    try:
        result = test_live_update()
        if result:
            print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ! –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        else:
            print("\nüí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º.")
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback

        traceback.print_exc()
