#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π –≤ –±–æ—Ç–µ
"""

import asyncio
import logging

from enhanced_event_search import enhanced_search_events

from config import load_settings
from database import init_engine

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def test_bot_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π –≤ –±–æ—Ç–µ"""
    print("ü§ñ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –°–û–ë–´–¢–ò–ô –í –ë–û–¢–ï")
    print("=" * 50)

    settings = load_settings()
    init_engine(settings.database_url)

    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_lat = -8.679649
    user_lon = 115.230388

    print(f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ({user_lat}, {user_lon})")
    print()

    # 1. –¢–µ—Å—Ç —Å —Ä–∞–¥–∏—É—Å–æ–º 15–∫–º (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    print("1Ô∏è‚É£ –¢–ï–°–¢ –° –†–ê–î–ò–£–°–û–ú 15–ö–ú")
    print("-" * 30)

    try:
        events = await enhanced_search_events(lat=user_lat, lng=user_lon, radius_km=15)

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π —Å —Ä–∞–¥–∏—É—Å–æ–º 15–∫–º: {len(events)}")
        for event in events:
            print(f"   ID {event.get('id', 'N/A')}: '{event.get('title', 'N/A')}'")
            print(f"      –í—Ä–µ–º—è: {event.get('time_local', 'N/A')}")
            print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({event.get('lat', 'N/A')}, {event.get('lng', 'N/A')})")
            print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {event.get('source', 'N/A')}")

        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å —Ä–∞–¥–∏—É—Å–æ–º 15–∫–º: {e}")
        print()

    # 2. –¢–µ—Å—Ç —Å —Ä–∞–¥–∏—É—Å–æ–º 50–∫–º
    print("2Ô∏è‚É£ –¢–ï–°–¢ –° –†–ê–î–ò–£–°–û–ú 50–ö–ú")
    print("-" * 30)

    try:
        events = await enhanced_search_events(lat=user_lat, lng=user_lon, radius_km=50)

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π —Å —Ä–∞–¥–∏—É—Å–æ–º 50–∫–º: {len(events)}")
        for event in events:
            print(f"   ID {event.get('id', 'N/A')}: '{event.get('title', 'N/A')}'")
            print(f"      –í—Ä–µ–º—è: {event.get('time_local', 'N/A')}")
            print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({event.get('lat', 'N/A')}, {event.get('lng', 'N/A')})")
            print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {event.get('source', 'N/A')}")

        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å —Ä–∞–¥–∏—É—Å–æ–º 50–∫–º: {e}")
        print()

    # 3. –¢–µ—Å—Ç –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (–≤—Å–µ —Å–æ–±—ã—Ç–∏—è)
    print("3Ô∏è‚É£ –¢–ï–°–¢ –ë–ï–ó –ö–û–û–†–î–ò–ù–ê–¢")
    print("-" * 30)

    try:
        events = await enhanced_search_events(lat=None, lng=None, radius_km=15)

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {len(events)}")
        for event in events:
            print(f"   ID {event.get('id', 'N/A')}: '{event.get('title', 'N/A')}'")
            print(f"      –í—Ä–µ–º—è: {event.get('time_local', 'N/A')}")
            print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({event.get('lat', 'N/A')}, {event.get('lng', 'N/A')})")
            print(f"      –ò—Å—Ç–æ—á–Ω–∏–∫: {event.get('source', 'N/A')}")

        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {e}")
        print()

    # 4. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
    print("-" * 30)

    print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("   1. –°–æ–±—ã—Ç–∏—è –≤ –ø—Ä–æ—à–ª–æ–º")
    print("   2. –°–æ–±—ã—Ç–∏—è —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ")
    print("   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏")
    print("   4. –ü—Ä–æ–±–ª–µ–º–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∑–æ–Ω–∞–º–∏")
    print("   5. –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π")
    print()

    print("=" * 50)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ —Å–æ–±—ã—Ç–∏—è –≤ –±—É–¥—É—â–µ–º")
    print("2. –ü—Ä–æ–≤–µ—Ä—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–æ–±—ã—Ç–∏–π")
    print("3. –ü—Ä–æ–≤–µ—Ä—å —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞")
    print("4. –ü—Ä–æ–≤–µ—Ä—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã")
    print("5. –ü—Ä–æ–≤–µ—Ä—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Å–æ–±—ã—Ç–∏–π")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        await test_bot_search()
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False


if __name__ == "__main__":
    success = asyncio.run(main())
    exit(0 if success else 1)
