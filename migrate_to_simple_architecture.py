#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –±–µ–∑ VIEW
"""

from sqlalchemy import text

from config import load_settings
from database import get_engine, init_engine


def migrate_to_simple():
    """–ú–∏–≥—Ä–∏—Ä—É–µ–º –Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –±–µ–∑ VIEW"""
    settings = load_settings()
    init_engine(settings.database_url)
    engine = get_engine()

    with engine.connect() as conn:
        # 1. –£–¥–∞–ª—è–µ–º VIEW events (–æ–Ω –Ω–µ –Ω—É–∂–µ–Ω)
        conn.execute(text("DROP VIEW IF EXISTS events"))
        print("‚úÖ –£–¥–∞–ª–µ–Ω VIEW events")

        # 2. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω—É–∂–Ω—ã
        conn.execute(text("DROP TABLE IF EXISTS moments"))
        print("‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ moments")

        # 3. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ VIEW –¥–ª—è —Ä–µ–≥–∏–æ–Ω–æ–≤
        conn.execute(text("DROP VIEW IF EXISTS events_all_bali"))
        conn.execute(text("DROP VIEW IF EXISTS events_all_moscow"))
        conn.execute(text("DROP VIEW IF EXISTS events_all_spb"))
        print("‚úÖ –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ VIEW –¥–ª—è —Ä–µ–≥–∏–æ–Ω–æ–≤")

        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
        result = conn.execute(
            text("""
            SELECT table_name FROM information_schema.tables
            WHERE table_schema = 'public'
            AND table_type = 'TABLE'
            ORDER BY table_name
        """)
        ).fetchall()

        print("üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–∞–±–ª–∏—Ü—ã:")
        for row in result:
            print(f"  - {row[0]}")

        conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    migrate_to_simple()
