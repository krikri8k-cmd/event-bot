#!/usr/bin/env python3
"""
–ò–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤ (EventAroundBot - –≤–µ—Ä—Å–∏—è –¥–ª—è —á–∞—Ç–æ–≤)

–í–ê–ñ–ù–û: –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞!
- –†–∞–±–æ—Ç–∞–µ—Ç –¢–û–õ–¨–ö–û –≤ group/supergroup —á–∞—Ç–∞—Ö
- –ù–ï –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
- –ù–ï –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞
- –°–≤—è–∑—å —Å –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ deep-link
"""

import asyncio
import contextlib
import logging
import re
from datetime import datetime

from aiogram import Bot, F, Router, types
from aiogram.filters import Command
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message
from sqlalchemy.ext.asyncio import AsyncSession

from database import CommunityEvent
from utils.messaging_utils import delete_all_tracked, is_chat_admin

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
GROUP_CMDS = [types.BotCommand(command="start", description="üéâ –°–æ–±—ã—Ç–∏—è —á–∞—Ç–∞")]
LANGS = (None, "ru", "en")  # default + ru + en


async def ensure_group_start_command(bot: Bot, chat_id: int):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã (—É—Å–∫–æ—Ä—è–µ—Ç –º–æ–±–∏–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç)"""
    try:
        cmds = [types.BotCommand(command="start", description="üéâ –°–æ–±—ã—Ç–∏—è —á–∞—Ç–∞")]

        # –î–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø –Ω—É–∂–Ω–∞ –æ—Å–æ–±–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
        chat_type = "supergroup" if str(chat_id).startswith("-100") else "group"
        logger.info(f"üî• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è {chat_type} {chat_id}")

        for lang in (None, "ru", "en"):
            try:
                # –î–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã
                if chat_type == "supergroup":
                    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º BotCommandScopeChat
                    try:
                        await bot.set_my_commands(
                            cmds, scope=types.BotCommandScopeChat(chat_id=chat_id), language_code=lang
                        )
                        logger.info(
                            f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã {chat_id} (—è–∑—ã–∫: {lang or 'default'})"
                        )
                    except Exception as chat_scope_error:
                        logger.warning(
                            f"‚ö†Ô∏è BotCommandScopeChat –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª –¥–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã {chat_id}: {chat_scope_error}"
                        )
                        # Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º AllGroupChats
                        await bot.set_my_commands(cmds, scope=types.BotCommandScopeAllGroupChats(), language_code=lang)
                        logger.info(
                            f"‚úÖ Fallback: –∫–æ–º–∞–Ω–¥–∞ /start —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ AllGroupChats "
                            f"–¥–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã {chat_id} (—è–∑—ã–∫: {lang or 'default'})"
                        )
                else:
                    # –î–ª—è –æ–±—ã—á–Ω—ã—Ö –≥—Ä—É–ø–ø
                    await bot.set_my_commands(
                        cmds, scope=types.BotCommandScopeChat(chat_id=chat_id), language_code=lang
                    )
                    logger.info(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ /start —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã {chat_id} (—è–∑—ã–∫: {lang or 'default'})")
            except Exception as lang_error:
                logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —è–∑—ã–∫–∞ {lang} –≤ {chat_type} {chat_id}: {lang_error}")

        logger.info(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è {chat_type} {chat_id} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ ensure_group_start_command({chat_id}): {e}")


async def nudge_mobile_menu(bot: Bot, chat_id: int):
    """–ú—è–≥–∫–∏–π –ø–∏–Ω–æ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ - –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"""
    try:
        msg = await bot.send_message(
            chat_id,
            "‚ÑπÔ∏è –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–∂–º–∏—Ç–µ `/` –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ `/start@EventAroundBot`.",
            disable_notification=True,
        )
        await asyncio.sleep(3)
        with contextlib.suppress(Exception):
            await bot.delete_message(chat_id, msg.message_id)
        logger.info(f"‚úÖ –ü–æ–¥—Å–∫–∞–∑–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ —É–¥–∞–ª–µ–Ω–∞ –≤ –≥—Ä—É–ø–ø–µ {chat_id}")
    except Exception as e:
        logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ nudge_mobile_menu({chat_id}): {e}")


async def restore_commands_after_hide(event_or_chat_id, bot: Bot):
    """–ù–∞–¥–µ–∂–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –ø–æ—Å–ª–µ —Å–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞"""
    try:
        # 1) –í—ã—Ç–∞—â–∏–º chat_id –±–µ–∑–æ–ø–∞—Å–Ω–æ
        if isinstance(event_or_chat_id, int):
            chat_id = event_or_chat_id
            thread_id = None
        else:
            msg = event_or_chat_id if isinstance(event_or_chat_id, types.Message) else event_or_chat_id.message
            chat_id = msg.chat.id  # ‚Üê –¢–û–õ–¨–ö–û chat.id (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π)
            thread_id = getattr(msg, "message_thread_id", None)

        logger.info(f"[restore] chat_id={chat_id} ({type(chat_id)}), thread_id={thread_id}")

        # 2) –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ chat_id –≤–∞–ª–∏–¥–µ–Ω (—Å—Ç—Ä–æ–∫–∞ -> int)
        if isinstance(chat_id, str):
            chat_id = int(chat_id)

        # 3) –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –±–æ—Ç —Å–æ—Å—Ç–æ–∏—Ç –≤ —á–∞—Ç–µ –∏ chat_id –≤–∞–ª–∏–¥–µ–Ω
        try:
            chat = await bot.get_chat(chat_id)  # –≤—ã–±—Ä–æ—Å–∏—Ç BadRequest –µ—Å–ª–∏ chat_id –Ω–µ–≤–∞–ª–∏–¥–µ–Ω
            assert chat.type in ("supergroup", "group"), f"Unexpected chat type: {chat.type}"
            logger.info(f"[restore] –ß–∞—Ç –≤–∞–ª–∏–¥–µ–Ω: {chat.type} {chat_id}")
        except Exception as e:
            logger.error(f"[restore] –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π chat_id {chat_id}: {e}")
            return

        # 4) –ò–Ω–æ–≥–¥–∞ –∫–ª–∏–µ–Ω—Ç—É –Ω—É–∂–µ–Ω –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –ø–æ—Å–ª–µ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        await asyncio.sleep(0.5)

        # 5) –í–µ—Ä–Ω—ë–º –∫–Ω–æ–ø–∫—É "–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞" –∏ /start –°–ü–ï–¶–ò–ê–õ–¨–ù–û –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        for lang in LANGS:
            try:
                await bot.set_my_commands(
                    GROUP_CMDS, scope=types.BotCommandScopeChat(chat_id=chat_id), language_code=lang
                )
                logger.info(f"[restore] –ö–æ–º–∞–Ω–¥—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è —è–∑—ã–∫–∞ {lang or 'default'}")
            except Exception as e:
                logger.error(f"[restore] –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —è–∑—ã–∫–∞ {lang}: {e}")

        await bot.set_chat_menu_button(chat_id=chat_id, menu_button=types.MenuButtonCommands())
        logger.info(f"[restore] Menu Button —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —á–∞—Ç–∞ {chat_id}")

        # 6) –ü–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: –ø–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 2 —Å–µ–∫ (–º–æ–±–∏–ª—å–Ω—ã–π –∫—ç—à Telegram)
        await asyncio.sleep(2)
        for lang in LANGS:
            try:
                await bot.set_my_commands(
                    GROUP_CMDS, scope=types.BotCommandScopeChat(chat_id=chat_id), language_code=lang
                )
            except Exception as e:
                logger.error(f"[restore] –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —è–∑—ã–∫–∞ {lang}: {e}")

        logger.info(f"[restore] /start –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ —á–∞—Ç–µ {chat_id}")

    except Exception as e:
        logger.error(f"[restore] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥: {e}")


logger = logging.getLogger(__name__)


# === –£–¢–ò–õ–ò–¢–´ ===


def extract_city_from_location_url(location_url: str) -> str | None:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –≥–æ—Ä–æ–¥ –∏–∑ Google Maps —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –∞–¥—Ä–µ—Å–∞"""
    if not location_url:
        return None

    # –°–ø–∏—Å–æ–∫ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤/—Ä–∞–π–æ–Ω–æ–≤ –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è
    known_cities = [
        # –ë–∞–ª–∏
        "Canggu",
        "Seminyak",
        "Ubud",
        "Sanur",
        "Kuta",
        "Denpasar",
        "Uluwatu",
        "Nusa Dua",
        # –í—å–µ—Ç–Ω–∞–º
        "Nha Trang",
        "Ho Chi Minh",
        "Hanoi",
        "Da Nang",
        "Hoi An",
        "Phu Quoc",
        # –†–æ—Å—Å–∏—è
        "Moscow",
        "Saint Petersburg",
        "SPB",
        "Novosibirsk",
        "Yekaterinburg",
        # –î—Ä—É–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ
        "Bangkok",
        "Phuket",
        "Chiang Mai",
        "Jakarta",
        "Bali",
        "Singapore",
    ]

    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
    for city in known_cities:
        if city.lower() in location_url.lower():
            return city

    # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥, –ø—Ä–æ–±—É–µ–º –∏–∑–≤–ª–µ—á—å –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º
    patterns = [
        # Google Maps URL —Å –∞–¥—Ä–µ—Å–æ–º: "Street, City, Region, Country"
        r",\s*([A-Za-z\s]+),\s*[A-Za-z\s]+,\s*[A-Za-z\s]+$",  # –ü–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–µ–¥ —Å—Ç—Ä–∞–Ω–æ–π
        r",\s*([A-Za-z\s]+),\s*\d{5}",  # –ì–æ—Ä–æ–¥ –ø–µ—Ä–µ–¥ –ø–æ—á—Ç–æ–≤—ã–º –∏–Ω–¥–µ–∫—Å–æ–º
        r",\s*([A-Za-z\s]+),\s*[A-Z]{2}\s*\d{5}",  # –ì–æ—Ä–æ–¥, —à—Ç–∞—Ç, –ø–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
    ]

    for pattern in patterns:
        match = re.search(pattern, location_url, re.IGNORECASE)
        if match:
            city = match.group(1).strip()
            # –û—á–∏—â–∞–µ–º –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Ü–∏—Ñ—Ä
            city = re.sub(r"[^\w\s-]", "", city).strip()
            city = re.sub(r"\d+", "", city).strip()  # –£–±–∏—Ä–∞–µ–º —Ü–∏—Ñ—Ä—ã
            if city and len(city) > 2:  # –ú–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞
                return city

    return None


# === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===

# Username –±–æ—Ç–∞ –¥–ª—è deep-links (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏)
MAIN_BOT_USERNAME = None  # –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ set_bot_username()

# === –†–û–£–¢–ï–† ===

group_router = Router(name="group_router")


@group_router.message(lambda message: message.text == "üéâ /start –°–æ–±—ã—Ç–∏—è —á–∞—Ç–∞")
async def handle_events_button(message: Message, bot: Bot, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ Events - —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞ /start"""
    if message.chat.type in ("group", "supergroup"):
        logger.info(f"üéâ –ö–Ω–æ–ø–∫–∞ Events –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π Events
        try:
            await message.delete()
            logger.info(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ Events –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")
        except Exception as e:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É Events: {e}")

        # –í—ã–∑—ã–≤–∞–µ–º —Ç–æ—Ç –∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —á—Ç–æ –∏ –¥–ª—è /start
        await handle_start_command(message, bot, session)


@group_router.message(lambda message: message.text == "/test_autodelete")
async def test_autodelete(message: Message, bot: Bot, session: AsyncSession):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è"""
    if message.chat.type in ("group", "supergroup"):
        logger.info(f"üß™ –¢–µ—Å—Ç –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
        from utils.messaging_utils import send_tracked

        test_msg = await send_tracked(
            bot,
            session,
            chat_id=message.chat.id,
            text="üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –¥–æ–ª–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥",
            tag="service",
        )

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
        import asyncio

        from utils.messaging_utils import auto_delete_message

        asyncio.create_task(auto_delete_message(bot, message.chat.id, test_msg.message_id, 10))

        await message.answer("‚úÖ –¢–µ—Å—Ç –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω! –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥.")


@group_router.message(Command("start"))
async def handle_start_command(message: Message, bot: Bot, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –≤ –≥—Ä—É–ø–ø–∞—Ö - —É–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å Community"""
    if message.chat.type in ("group", "supergroup"):
        logger.info(f"üî• –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}")

        # –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é Community
        try:
            from utils.user_analytics import UserAnalytics

            UserAnalytics.increment_sessions_community(message.from_user.id)
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é Community: {e}")

        # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
        try:
            await message.delete()
            logger.info(
                f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ {message.text} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} –≤ —á–∞—Ç–µ {message.chat.id}"
            )
        except Exception as e:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É {message.text}: {e}")

        # –°–¢–û–†–û–ñ –ö–û–ú–ê–ù–î: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–º /start –≤ –≥—Ä—É–ø–ø–µ
        try:
            from bot_enhanced_v3 import ensure_commands

            await ensure_commands(bot)
            logger.info(f"‚úÖ –°—Ç–æ—Ä–æ–∂ –∫–æ–º–∞–Ω–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø—Ä–∏ /start –≤ –≥—Ä—É–ø–ø–µ {message.chat.id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–æ—Ä–æ–∂–∞ –∫–æ–º–∞–Ω–¥ –ø—Ä–∏ /start –≤ –≥—Ä—É–ø–ø–µ {message.chat.id}: {e}")

        # –õ–û–ì–ò–†–£–ï–ú –ò–ù–§–û–†–ú–ê–¶–ò–Æ –û –ß–ê–¢–ï
        is_forum = message.chat.type == "supergroup"
        thread_id = getattr(message, "message_thread_id", None)
        logger.info(f"üî• /start –≤ –≥—Ä—É–ø–ø–µ: chat_id={message.chat.id}, is_forum={is_forum}, thread_id={thread_id}")

        # –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ö–û–ù–ö–†–ï–¢–ù–û–ô –ì–†–£–ü–ü–´
        await ensure_group_start_command(bot, message.chat.id)

        # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å Community —Å InlineKeyboard –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        try:
            # –°–æ–∑–¥–∞–µ–º InlineKeyboard –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            keyboard = InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ", url=f"https://t.me/EventAroundBot?start=group_{message.chat.id}"
                        )
                    ],
                    [InlineKeyboardButton(text="üìã –°–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞", callback_data="group_list")],
                    [InlineKeyboardButton(text='üöÄ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è "World"', url="https://t.me/EventAroundBot")],
                    [InlineKeyboardButton(text="üëÅÔ∏è‚Äçüó®Ô∏è –°–ø—Ä—è—Ç–∞—Ç—å –±–æ—Ç–∞", callback_data="group_hide_execute")],
                ]
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å Community —Å —Ç—Ä–µ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ–º (–∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 –º–∏–Ω—É—Ç—ã)
            try:
                from utils.messaging_utils import send_tracked

                panel_text = (
                    'üëã –ü—Ä–∏–≤–µ—Ç! –Ø EventAroundBot - –≤–µ—Ä—Å–∏—è "Community".\n\n'
                    "üéØ –ß—Ç–æ —É–º–µ—é:\n\n"
                    "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞\n"
                    "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞\n"
                    '‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ –ø–æ–ª–Ω—ã–π –±–æ—Ç - –≤–µ—Ä—Å–∏—è "World"\n\n'
                    "üí° –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
                )

                # –°–æ–∑–¥–∞–µ–º ReplyKeyboard –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                from aiogram.types import KeyboardButton, ReplyKeyboardMarkup

                start_keyboard = ReplyKeyboardMarkup(
                    keyboard=[
                        [KeyboardButton(text="üéâ /start –°–æ–±—ã—Ç–∏—è —á–∞—Ç–∞")],
                    ],
                    resize_keyboard=True,
                    one_time_keyboard=False,
                    persistent=True,
                )

                await send_tracked(
                    bot,
                    session,
                    chat_id=message.chat.id,
                    text=panel_text,
                    tag="panel",  # –¢–µ–≥ –¥–ª—è –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 4 –º–∏–Ω—É—Ç—ã
                    reply_markup=keyboard,
                )
                logger.info(f"‚úÖ –ü–∞–Ω–µ–ª—å Community –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏ —Ç—Ä–µ–∫–∏—Ä—É–µ—Ç—Å—è –≤ —á–∞—Ç–µ {message.chat.id}")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ send_tracked: {e}")
                # Fallback - –æ–±—ã—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ —Ç—Ä–µ–∫–∏—Ä–æ–≤–∞–Ω–∏—è
                await message.answer(
                    'üëã –ü—Ä–∏–≤–µ—Ç! –Ø EventAroundBot - –≤–µ—Ä—Å–∏—è "Community".\n\n'
                    "üéØ –ß—Ç–æ —É–º–µ—é:\n\n"
                    "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞\n"
                    "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞\n"
                    '‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ –ø–æ–ª–Ω—ã–π –±–æ—Ç - –≤–µ—Ä—Å–∏—è "World"\n\n'
                    "üí° –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                    reply_markup=keyboard,
                    parse_mode="Markdown",
                )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ReplyKeyboard —Å –∫–Ω–æ–ø–∫–æ–π /start —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–∞–Ω–µ–ª–∏
            activation_msg = await message.answer("ü§ñ EventAroundBot –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!", reply_markup=start_keyboard)

            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É (ReplyKeyboard –æ—Å—Ç–∞–µ—Ç—Å—è)
            try:
                await asyncio.sleep(1)
                await bot.delete_message(message.chat.id, activation_msg.message_id)
                logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–æ, ReplyKeyboard –æ—Å—Ç–∞–ª—Å—è –≤ —á–∞—Ç–µ {message.chat.id}")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {e}")

            # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏ –º–µ–Ω—é
            try:
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞
                await bot.set_my_commands(
                    [types.BotCommand(command="start", description="üéâ –°–æ–±—ã—Ç–∏—è —á–∞—Ç–∞")],
                    scope=types.BotCommandScopeChat(chat_id=message.chat.id),
                )

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MenuButton –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞ –∫–æ–º–∞–Ω–¥
                await bot.set_chat_menu_button(chat_id=message.chat.id, menu_button=types.MenuButtonCommands())

                logger.info(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã –∏ –º–µ–Ω—é –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –≤ —á–∞—Ç–µ {message.chat.id}")

                # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö (–±–µ–∑ ReplyKeyboard - –æ–Ω —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—ã—à–µ)
                try:
                    hint_msg = await message.answer(
                        "üí° **–î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö:** –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–∫–æ–Ω–∫—É —Å–µ—Ç–∫–∏ —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º",
                        parse_mode="Markdown",
                    )
                    # –£–¥–∞–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                    await asyncio.sleep(5)
                    await bot.delete_message(message.chat.id, hint_msg.message_id)
                except Exception as hint_error:
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö: {hint_error}")

            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö: {e}")

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∞–Ω–µ–ª–∏ Community: {e}")
            await message.answer("ü§ñ EventAroundBot –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")


# –£–±—Ä–∞–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ReplyKeyboard –∫–Ω–æ–ø–æ–∫ - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ InlineKeyboard


# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===


def set_bot_username(username: str):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç username –±–æ—Ç–∞ –¥–ª—è deep-links"""
    global MAIN_BOT_USERNAME
    MAIN_BOT_USERNAME = username
    logger.info(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω username –±–æ—Ç–∞ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞: {username}")


async def setup_group_menu_button(bot, group_id: int = None):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Menu Button –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤ —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π"""
    try:
        from aiogram.types import BotCommand, BotCommandScopeAllGroupChats, MenuButtonCommands

        # –ö–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø
        group_commands = [
            BotCommand(command="start", description="üéâ –°–æ–±—ã—Ç–∏—è —á–∞—Ç–∞"),
        ]

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø (–±–µ–∑ —è–∑—ã–∫–∞ –∏ —Å —Ä—É—Å—Å–∫–æ–π –ª–æ–∫–∞–ª—å—é)
        await bot.set_my_commands(group_commands, scope=BotCommandScopeAllGroupChats())
        await bot.set_my_commands(group_commands, scope=BotCommandScopeAllGroupChats(), language_code="ru")

        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
        import asyncio

        await asyncio.sleep(1)

        # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Menu Button –¥–ª—è –≥—Ä—É–ø–ø
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π Menu Button
            current_button = await bot.get_chat_menu_button()
            logger.info(f"üîç –¢–µ–∫—É—â–∏–π Menu Button –¥–ª—è –≥—Ä—É–ø–ø: {current_button}")

            # –ï—Å–ª–∏ —ç—Ç–æ WebApp, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ Default, –ø–æ—Ç–æ–º –Ω–∞ Commands
            if hasattr(current_button, "type") and current_button.type == "web_app":
                logger.warning("‚ö†Ô∏è Menu Button –¥–ª—è –≥—Ä—É–ø–ø –ø–µ—Ä–µ–∫—Ä—ã—Ç WebApp! –°–±—Ä–∞—Å—ã–≤–∞–µ–º...")
                from aiogram.types import MenuButtonDefault

                await bot.set_chat_menu_button(menu_button=MenuButtonDefault())
                await asyncio.sleep(1)

            # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Commands –¥–ª—è –í–°–ï–• –≥—Ä—É–ø–ø
            await bot.set_chat_menu_button(menu_button=MenuButtonCommands())
            logger.info("‚úÖ Menu Button –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤—Å–µ—Ö –≥—Ä—É–ø–ø")

            # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞ - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è –Ω–µ—ë
            if group_id:
                await bot.set_chat_menu_button(chat_id=group_id, menu_button=MenuButtonCommands())
                logger.info(f"‚úÖ Menu Button –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã {group_id}")

        except Exception as e:
            logger.warning(f"‚ö†Ô∏è Menu Button –¥–ª—è –≥—Ä—É–ø–ø –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: {e}")

        logger.info("‚úÖ Menu Button –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Menu Button –¥–ª—è –≥—Ä—É–ø–ø: {e}")


# –£–ë–†–ê–ù–û: —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è Reply Keyboard - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã –∏ –º–µ–Ω—é


# –ñ—ë—Å—Ç–∫–∞—è –∏–∑–æ–ª—è—Ü–∏—è: —Ä–æ—É—Ç–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –¢–û–õ–¨–ö–û –≤ –≥—Ä—É–ø–ø–∞—Ö
group_router.message.filter(F.chat.type.in_({"group", "supergroup"}))
group_router.callback_query.filter(F.message.chat.type.in_({"group", "supergroup"}))


# –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ö–õ–ê–í–ò–ê–¢–£–†–ê –î–õ–Ø –í–°–ï–• –°–û–û–ë–©–ï–ù–ò–ô –í –ì–†–£–ü–ü–ï
# –£–ë–†–ê–ù–û: force_keyboard_for_all_messages - –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫ –∫–∞–∂–¥–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é


# === –¢–ï–ö–°–¢–´ –ò –ö–õ–ê–í–ò–ê–¢–£–†–´ ===

PANEL_TEXT = (
    'üëã –ü—Ä–∏–≤–µ—Ç! –Ø EventAroundBot - –≤–µ—Ä—Å–∏—è "Community".\n\n'
    "üéØ –ß—Ç–æ —É–º–µ—é:\n"
    "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞\n"
    "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞\n"
    '‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤ –ø–æ–ª–Ω—ã–π –±–æ—Ç - –≤–µ—Ä—Å–∏—è "World"\n\n'
    "üí° –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
)


def group_kb(chat_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞–Ω–µ–ª–∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞"""
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π username –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ", url=f"https://t.me/EventAroundBot?start=group_{chat_id}")],
            [InlineKeyboardButton(text="üìã –°–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞", callback_data="group_list")],
            [InlineKeyboardButton(text='üöÄ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è "World"', url="https://t.me/EventAroundBot")],
            [InlineKeyboardButton(text="üëÅÔ∏è‚Äçüó®Ô∏è –°–ø—Ä—è—Ç–∞—Ç—å –±–æ—Ç–∞", callback_data="group_hide_execute")],
        ]
    )


# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ===


# –£–ë–†–ê–ù–û: –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ Reply Keyboard - —Ç–µ–ø–µ—Ä—å –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—ã –∏ –º–µ–Ω—é


# –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ö–õ–ê–í–ò–ê–¢–£–†–ê –ü–†–ò –î–û–ë–ê–í–õ–ï–ù–ò–ò –ë–û–¢–ê –í –ì–†–£–ü–ü–£
@group_router.message(F.new_chat_members, F.chat.type.in_({"group", "supergroup"}))
async def handle_new_members(message: Message, bot: Bot, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø—É"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–∏–ª–∏ –ª–∏ –±–æ—Ç–∞
    bot_added = any(member.is_bot for member in message.new_chat_members)

    if bot_added:
        logger.info(f"üî• –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É {message.chat.id}")

        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ chat_settings —Å—Ä–∞–∑—É
        import json

        from sqlalchemy import select, text

        from database import ChatSettings

        result = await session.execute(select(ChatSettings).where(ChatSettings.chat_id == message.chat.id))
        settings = result.scalar_one_or_none()

        if not settings:
            logger.info(f"üî• –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ chat_settings –¥–ª—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ {message.chat.id}")
            # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π chat_number
            result = await session.execute(text("SELECT nextval('chat_number_seq')"))
            chat_number = result.scalar()
            logger.info(f"‚úÖ –ù–∞–∑–Ω–∞—á–µ–Ω chat_number={chat_number} –¥–ª—è —á–∞—Ç–∞ {message.chat.id}")

            # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–æ–≤ –≥—Ä—É–ø–ø—ã
            admin_ids = []
            admin_count = 0
            try:
                from utils.community_events_service import CommunityEventsService

                community_service = CommunityEventsService()
                admin_ids = await community_service.get_cached_admin_ids(bot, message.chat.id)
                admin_count = len(admin_ids)
                logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –∞–¥–º–∏–Ω—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞ {message.chat.id}: count={admin_count}")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤ –¥–ª—è —á–∞—Ç–∞ {message.chat.id}: {e}")

            settings = ChatSettings(
                chat_id=message.chat.id,
                chat_number=chat_number,
                admin_ids=json.dumps(admin_ids) if admin_ids else None,
                admin_count=admin_count,
                bot_status="active",
            )
            session.add(settings)
            await session.commit()
            logger.info(f"‚úÖ –ó–∞–ø–∏—Å—å chat_settings —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —á–∞—Ç–∞ {message.chat.id}")

        # –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–µ–∑ –≤—ã–±–æ—Ä–∞ –≤–µ—Ç–∫–∏
        await message.answer(
            "üéâ **–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É!**\n\n" "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã", parse_mode="Markdown"
        )


@group_router.callback_query(F.data == "group_list")
async def group_list_events(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π —ç—Ç–æ–≥–æ —á–∞—Ç–∞"""
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    logger.info(f"üî• group_list_events: –∑–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π –≤ —á–∞—Ç–µ {chat_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

    await callback.answer()  # –¢–æ—Å—Ç, –Ω–µ —Å–ø–∞–º–∏–º

    try:
        # –ü–æ–ª—É—á–∞–µ–º –±—É–¥—É—â–∏–µ —Å–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        from sqlalchemy import select

        stmt = (
            select(CommunityEvent)
            .where(
                CommunityEvent.chat_id == chat_id,
                CommunityEvent.status == "open",
                CommunityEvent.starts_at >= datetime.utcnow().replace(hour=0, minute=0, second=0, microsecond=0),
            )
            .order_by(CommunityEvent.starts_at)
            .limit(10)
        )

        result = await session.execute(stmt)
        events = result.scalars().all()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –≥—Ä—É–ø–ø—ã
        is_admin = await is_chat_admin(bot, chat_id, callback.from_user.id)

        if not events:
            text = (
                "üìã **–°–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞**\n\n"
                "üì≠ **0 —Å–æ–±—ã—Ç–∏–π**\n\n"
                "–í —ç—Ç–æ–º —á–∞—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π.\n\n"
                "üí° –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É **‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ**!"
            )
        else:
            text = f"üìã **–°–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞** ({len(events)} —Å–æ–±—ã—Ç–∏–π)\n\n"

            for i, event in enumerate(events, 1):
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
                date_str = event.starts_at.strftime("%d.%m.%Y %H:%M")

                # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ —Å–ø–∏—Å–æ–∫ (–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
                safe_title = event.title.replace("*", "").replace("_", "").replace("`", "'")
                text += f"{i}. {safe_title}\n"
                text += f"   üìÖ {date_str}\n"

                # –ì–æ—Ä–æ–¥ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Ä—É—á–Ω–æ–π –≤–≤–æ–¥, –∑–∞—Ç–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ)
                city_to_show = None
                if event.city:
                    city_to_show = event.city
                elif event.location_url:
                    city_to_show = extract_city_from_location_url(event.location_url)

                if city_to_show:
                    safe_city = city_to_show.replace("*", "").replace("_", "").replace("`", "'")
                    text += f"   üèôÔ∏è {safe_city}\n"

                # –û–ø–∏—Å–∞–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
                if event.description:
                    desc = event.description[:80] + "..." if len(event.description) > 80 else event.description
                    safe_desc = desc.replace("*", "").replace("_", "").replace("`", "'")
                    text += f"   üìù {safe_desc}\n"

                # –ú–µ—Å—Ç–æ (–±–µ–∑ —Å—Å—ã–ª–æ–∫ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
                if event.location_name:
                    safe_location = event.location_name.replace("*", "").replace("_", "").replace("`", "'")
                    text += f"   üìç {safe_location}\n"

                # –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä
                if event.organizer_username:
                    text += f"   üë§ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä: @{event.organizer_username}\n"

                text += "\n"

            if is_admin:
                text += "üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –ª—é–±–æ–µ —Å–æ–±—ã—Ç–∏–µ –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ!\n"
                text += "üí° –ù–∞–∂–º–∏—Ç–µ ‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–µ!"
            else:
                text += "üîß –í–∞—à–∏ —Å–æ–±—ã—Ç–∏—è: –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ —Å–æ–±—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ!\n"
                text += "üí° –ù–∞–∂–º–∏—Ç–µ ‚ûï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–µ!"

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard_buttons = []

        if events:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è —Å–æ–±—ã—Ç–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å
            for i, event in enumerate(events, 1):
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ
                can_delete_this_event = False

                # 1. –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
                if event.organizer_id == user_id:
                    can_delete_this_event = True
                # 2. –ê–¥–º–∏–Ω –≥—Ä—É–ø–ø—ã –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –ª—é–±–æ–µ —Å–æ–±—ã—Ç–∏–µ
                elif is_admin:
                    can_delete_this_event = True

                if can_delete_this_event:
                    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±—Ä–µ–∑–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
                    safe_title = event.title[:15] if len(event.title) > 15 else event.title
                    # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
                    safe_title = safe_title.replace("\n", " ").replace("\r", " ").strip()

                    keyboard_buttons.append(
                        [
                            InlineKeyboardButton(
                                text=f"‚ùå –£–¥–∞–ª–∏—Ç—å: {safe_title}",
                                callback_data=f"group_delete_event_{event.id}",
                            )
                        ]
                    )

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        keyboard_buttons.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="group_back_to_panel")])

        back_kb = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        logger.info(
            f"üî• group_list_events: –≥–æ—Ç–æ–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª–∏–Ω–æ–π {len(text)} —Å–∏–º–≤–æ–ª–æ–≤, {len(keyboard_buttons)} –∫–Ω–æ–ø–æ–∫"
        )
        if keyboard_buttons:
            for i, button_row in enumerate(keyboard_buttons):
                for j, button in enumerate(button_row):
                    logger.info(f"üî• –ö–Ω–æ–ø–∫–∞ {i},{j}: '{button.text}' -> '{button.callback_data}'")

        try:
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–ª—è Telegram
            if len(text) > 4000:
                text = text[:3900] + "\n\n... (—Ç–µ–∫—Å—Ç –æ–±—Ä–µ–∑–∞–Ω)"

            # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞
            text = text.replace("`", "'").replace("*", "").replace("_", "").replace("[", "(").replace("]", ")")

            # –ü—Ä–æ–±—É–µ–º –±–µ–∑ Markdown —Å–Ω–∞—á–∞–ª–∞
            await callback.message.edit_text(text, reply_markup=back_kb)
            logger.info("‚úÖ –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –æ—à–∏–±–∫–∏ "—Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ"
            if "message is not modified" in str(e).lower():
                logger.info("üî• –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                try:
                    await callback.message.answer(text, reply_markup=back_kb)
                    logger.info("‚úÖ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–æ–±—ã—Ç–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                except Exception as e2:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e2}")
                    await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π", show_alert=True)
            else:
                # Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ Markdown
                try:
                    await callback.message.answer(text, reply_markup=back_kb)
                except Exception as e2:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e2}")
                    # –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                try:
                    await callback.message.answer(
                        "üìã **–°–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞**\n\n‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                    )
                except Exception as e3:
                    logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e3}")
                    await callback.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π", show_alert=True)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π: {e}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        error_text = (
            "üìã **–°–æ–±—ã—Ç–∏—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞**\n\n"
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–±—ã—Ç–∏–π.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        back_kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="group_back_to_panel")],
            ]
        )
        try:
            await callback.message.edit_text(error_text, reply_markup=back_kb, parse_mode="Markdown")
        except Exception as edit_error:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {edit_error}")


@group_router.callback_query(F.data == "group_back_to_panel")
async def group_back_to_panel(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏"""
    chat_id = callback.message.chat.id
    logger.info(f"üî• group_back_to_panel: –≤–æ–∑–≤—Ä–∞—Ç –∫ –ø–∞–Ω–µ–ª–∏ –≤ —á–∞—Ç–µ {chat_id}")

    await callback.answer()

    try:
        await callback.message.edit_text(PANEL_TEXT, reply_markup=group_kb(chat_id), parse_mode="Markdown")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@group_router.callback_query(F.data == "group_hide_confirm")
async def group_hide_confirm(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    """–ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞ - —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å"""
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    logger.info(f"üî• group_hide_confirm: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {chat_id}")

    await callback.answer("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ...", show_alert=False)

    confirmation_text = (
        "üëÅÔ∏è‚Äçüó®Ô∏è **–°–ø—Ä—è—Ç–∞—Ç—å –±–æ—Ç–∞**\n\n"
        "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–∫—Ä—ã—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏–∑ —ç—Ç–æ–≥–æ —á–∞—Ç–∞?\n\n"
        "‚ö†Ô∏è **–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:**\n"
        "‚Ä¢ –£–¥–∞–ª–∏—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏–∑ —á–∞—Ç–∞\n"
        "‚Ä¢ –û—á–∏—Å—Ç–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π\n"
        "‚Ä¢ –ë–æ—Ç –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –≥—Ä—É–ø–ø–µ, –Ω–æ –Ω–µ –±—É–¥–µ—Ç –∑–∞—Å–æ—Ä—è—Ç—å —á–∞—Ç\n\n"
        "üí° **–û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è** - –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç —á–∞—Ç –æ—Ç —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π\n\n"
        "–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –î–∞, —Å–ø—Ä—è—Ç–∞—Ç—å", callback_data=f"group_hide_execute_{chat_id}")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="group_back_to_panel")],
        ]
    )

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=callback.message.message_id,
            text=confirmation_text,
            reply_markup=keyboard,
            parse_mode="Markdown",
        )
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞–Ω–µ–ª–∏: {e}")
        # Fallback - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ send_tracked
        from utils.messaging_utils import send_tracked

        try:
            await send_tracked(
                bot,
                session,
                chat_id=chat_id,
                text=confirmation_text,
                reply_markup=keyboard,
                tag="service",
            )
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {e}")


@group_router.callback_query(F.data == "group_hide_execute")
async def group_hide_execute_direct(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    """–ü—Ä—è–º–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞ –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id
    logger.info(f"üî• group_hide_execute_direct: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–∫—Ä—ã–≤–∞–µ—Ç –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {chat_id}")

    await callback.answer("–°–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞‚Ä¶", show_alert=False)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        bot_member = await bot.get_chat_member(chat_id, bot.id)
        logger.info(
            f"üî• –ü—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {chat_id}: status={bot_member.status}, "
            f"can_delete_messages={getattr(bot_member, 'can_delete_messages', None)}"
        )

        if bot_member.status != "administrator" or not getattr(bot_member, "can_delete_messages", False):
            logger.warning(f"üö´ –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ {chat_id}")
            await callback.message.edit_text(
                "‚ùå **–û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ**\n\n"
                "–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å –ø—Ä–∞–≤–æ–º '–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π'.\n\n"
                "–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã:\n"
                "1. –°–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n"
                "2. –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–≤–æ '–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π'\n\n"
                "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                parse_mode="Markdown",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏", callback_data="group_back_to_panel")]
                    ]
                ),
            )
            return
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –±–æ—Ç–∞: {e}")

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é delete_all_tracked (–ø–∞–Ω–µ–ª—å —Ç–µ–ø–µ—Ä—å —Ç—Ä–µ–∫–∏—Ä—É–µ—Ç—Å—è)
    try:
        deleted = await delete_all_tracked(bot, session, chat_id=chat_id)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–µ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        deleted = 0

    # –ö–æ—Ä–æ—Ç–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–Ω–µ —Ç—Ä–µ–∫–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –≥–æ–Ω—è—Ç—å—Å—è –∑–∞ –Ω–∏–º)
    note = await bot.send_message(
        chat_id,
        f"üëÅÔ∏è‚Äçüó®Ô∏è **–ë–æ—Ç —Å–∫—Ä—ã—Ç**\n\n"
        f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞: {deleted}\n"
        f"‚úÖ –ö–æ–º–∞–Ω–¥—ã /start –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è\n"
        f"‚úÖ –°–æ–±—ã—Ç–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\n\n"
        f"üí° **–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞:**\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start",
        parse_mode="Markdown",
    )

    # –í–û–°–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ö–û–ú–ê–ù–î–´ –ü–û–°–õ–ï –°–ö–†–´–¢–ò–Ø –ë–û–¢–ê (–ù–ê–î–ï–ñ–ù–û)
    await ensure_group_start_command(bot, chat_id)

    # –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    try:
        import asyncio

        await asyncio.sleep(5)
        await note.delete()
    except Exception:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

    logger.info(f"‚úÖ –ë–æ—Ç —Å–∫—Ä—ã—Ç –≤ —á–∞—Ç–µ {chat_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}, —É–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted}")


@group_router.callback_query(F.data.startswith("group_hide_execute_"))
async def group_hide_execute(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞"""
    chat_id = int(callback.data.split("_")[-1])
    user_id = callback.from_user.id
    logger.info(f"üî• group_hide_execute: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —Å–∫—Ä—ã—Ç–∏–µ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {chat_id}")

    await callback.answer("–°–∫—Ä—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞‚Ä¶", show_alert=False)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        bot_member = await bot.get_chat_member(chat_id, bot.id)
        logger.info(
            f"üî• –ü—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ {chat_id}: status={bot_member.status}, "
            f"can_delete_messages={getattr(bot_member, 'can_delete_messages', None)}"
        )

        if bot_member.status != "administrator" or not getattr(bot_member, "can_delete_messages", False):
            logger.warning(f"üö´ –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ {chat_id}")
            await callback.message.edit_text(
                "‚ùå **–û—à–∏–±–∫–∞: –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ**\n\n"
                "–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å –ø—Ä–∞–≤–æ–º '–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π'.\n\n"
                "–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã:\n"
                "1. –°–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n"
                "2. –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–≤–æ '–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π'\n\n"
                "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                parse_mode="Markdown",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏", callback_data="group_back_to_panel")]
                    ]
                ),
            )
            return
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –±–æ—Ç–∞: {e}")

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é delete_all_tracked
    try:
        deleted = await delete_all_tracked(bot, session, chat_id=chat_id)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        deleted = 0

    # –ö–æ—Ä–æ—Ç–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ (–Ω–µ —Ç—Ä–µ–∫–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –≥–æ–Ω—è—Ç—å—Å—è –∑–∞ –Ω–∏–º)
    note = await bot.send_message(
        chat_id,
        f"üëÅÔ∏è‚Äçüó®Ô∏è **–ë–æ—Ç —Å–∫—Ä—ã—Ç**\n\n"
        f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted}\n"
        f"–°–æ–±—ã—Ç–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n\n"
        f"–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start",
        parse_mode="Markdown",
    )

    # –í–û–°–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ö–û–ú–ê–ù–î–´ –ü–û–°–õ–ï –°–ö–†–´–¢–ò–Ø –ë–û–¢–ê (–ù–ê–î–ï–ñ–ù–û)
    await ensure_group_start_command(bot, chat_id)

    # –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥
    try:
        await asyncio.sleep(8)
        await bot.delete_message(chat_id, note.message_id)
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")


@group_router.callback_query(F.data.startswith("group_delete_event_"))
async def group_delete_event(callback: CallbackQuery, bot: Bot, session: AsyncSession):
    """–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    chat_id = callback.message.chat.id
    user_id = callback.from_user.id

    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Å–æ–±—ã—Ç–∏—è –∏–∑ callback_data
    try:
        event_id = int(callback.data.split("_")[-1])
    except ValueError:
        await callback.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID —Å–æ–±—ã—Ç–∏—è", show_alert=True)
        return

    logger.info(f"üî• group_delete_event: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—ã—Ç–∞–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ {event_id} –≤ —á–∞—Ç–µ {chat_id}")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —ç—Ç–æ–º—É —á–∞—Ç—É
        from sqlalchemy import select

        stmt = select(CommunityEvent).where(CommunityEvent.id == event_id, CommunityEvent.chat_id == chat_id)

        result = await session.execute(stmt)
        event = result.scalar_one_or_none()

        if not event:
            await callback.answer("‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", show_alert=True)
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ:
        # 1. –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        # 2. –ê–¥–º–∏–Ω –≥—Ä—É–ø–ø—ã (–∏–∑ admin_ids) –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –ª—é–±–æ–µ —Å–æ–±—ã—Ç–∏–µ
        # 3. LEGACY: –∞–¥–º–∏–Ω –≥—Ä—É–ø–ø—ã (–∏–∑ admin_id) –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –ª—é–±–æ–µ —Å–æ–±—ã—Ç–∏–µ
        # 4. FALLBACK: –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        can_delete = False

        if event.organizer_id == user_id:
            # –°–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è
            can_delete = True
            logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} - —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è {event_id}")
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º admin_ids (–Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥)
            if event.admin_ids:
                try:
                    import json

                    saved_admin_ids = json.loads(event.admin_ids)
                    if user_id in saved_admin_ids:
                        can_delete = True
                        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} - –∞–¥–º–∏–Ω –≥—Ä—É–ø–ø—ã (–∏–∑ admin_ids) –¥–ª—è —Å–æ–±—ã—Ç–∏—è {event_id}")
                except (json.JSONDecodeError, TypeError):
                    logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å admin_ids: {event.admin_ids}")

            # LEGACY: –ø—Ä–æ–≤–µ—Ä—è–µ–º admin_id (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
            if not can_delete and event.admin_id == user_id:
                can_delete = True
                logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} - –∞–¥–º–∏–Ω –≥—Ä—É–ø–ø—ã (LEGACY admin_id) –¥–ª—è —Å–æ–±—ã—Ç–∏—è {event_id}")

            # FALLBACK: –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
            if not can_delete and await is_chat_admin(bot, chat_id, user_id):
                can_delete = True
                logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} - –∞–¥–º–∏–Ω –≥—Ä—É–ø–ø—ã (–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏)")

        if not can_delete:
            await callback.answer(
                "‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å —Å–æ–±—ã—Ç–∏—è!", show_alert=True
            )
            return

        # –£–¥–∞–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
        await session.delete(event)
        await session.commit()
        logger.info(f"‚úÖ –°–æ–±—ã—Ç–∏–µ {event_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è", show_alert=True)
        return

    await callback.answer("‚úÖ –°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ!", show_alert=False)
    logger.info(f"üî• –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è {event_id}")

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π
    await group_list_events(callback, bot, session)


# === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===


def format_event_short(event: CommunityEvent) -> str:
    """–ö—Ä–∞—Ç–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —Å–ø–∏—Å–∫–∞"""
    date_str = event.starts_at.strftime("%d.%m %H:%M")
    text = f"**{event.title}**\nüìÖ {date_str}"

    # –ì–æ—Ä–æ–¥ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Ä—É—á–Ω–æ–π –≤–≤–æ–¥, –∑–∞—Ç–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ)
    city_to_show = None
    if event.city:
        city_to_show = event.city
    elif event.location_url:
        city_to_show = extract_city_from_location_url(event.location_url)

    if city_to_show:
        text += f"\nüèôÔ∏è {city_to_show}"

    if event.location_name:
        text += f"\nüìç {event.location_name}"

    return text
