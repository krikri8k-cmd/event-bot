#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–æ–±—ã—Ç–∏–π
"""

from dotenv import load_dotenv

from event_status_manager import (
    auto_close_events,
    change_event_status,
    format_event_for_display,
    get_event_by_id,
    get_events_statistics,
    get_status_change_buttons,
    get_status_description,
    get_status_emoji,
    get_user_events,
    is_valid_status,
)


def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ —Å–æ–±—ã—Ç–∏–π")
    print("=" * 50)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv("app.local.env")

    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Fincontro
    user_id = 456065084

    print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: {user_id}")

    print("\n1. üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π:")
    stats = get_events_statistics(user_id)
    for status, count in stats.items():
        emoji = get_status_emoji(status)
        desc = get_status_description(status)
        print(f"   {emoji} {desc}: {count} —Å–æ–±—ã—Ç–∏–π")

    print("\n2. üìã –°–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    events = get_user_events(user_id)
    for event in events:
        print(f"   - ID {event['id']}: {event['title']} ({event['status_emoji']} {event['status']})")

    print("\n3. üéØ –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ (ID 72):")
    event = get_event_by_id(72, user_id)
    if event:
        print("   –°–æ–±—ã—Ç–∏–µ –Ω–∞–π–¥–µ–Ω–æ:")
        print(f"   - –ù–∞–∑–≤–∞–Ω–∏–µ: {event['title']}")
        print(f"   - –°—Ç–∞—Ç—É—Å: {event['status_emoji']} {event['status_description']}")
        print(f"   - –ú–µ—Å—Ç–æ: {event['location_name'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")

        print("\n   üì± –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ:")
        formatted = format_event_for_display(event)
        print("   " + "\n   ".join(formatted.split("\n")))

        print("\n   üîò –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        buttons = get_status_change_buttons(event["id"], event["status"])
        for button in buttons:
            print(f"   - {button['text']} ({button['callback_data']})")
    else:
        print("   ‚ùå –°–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    print("\n4. üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞:")
    if event:
        print(f"   –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {event['status']}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
        test_statuses = ["closed", "open", "canceled"]
        for new_status in test_statuses:
            if new_status != event["status"]:
                print(f"   –ü—Ä–æ–±—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞: {new_status}")
                success = change_event_status(event["id"], new_status, user_id)
                if success:
                    print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {new_status}")
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
                    change_event_status(event["id"], "open", user_id)
                    print("   üîÑ –í–æ–∑–≤—Ä–∞—â–µ–Ω —Å—Ç–∞—Ç—É—Å 'open'")
                else:
                    print("   ‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
                break

    print("\n5. ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—é:")
    closed_count = auto_close_events()
    print(f"   –ó–∞–∫—Ä—ã—Ç–æ —Å–æ–±—ã—Ç–∏–π: {closed_count}")

    print("\n6. ‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å—Ç–∞—Ç—É—Å–æ–≤:")
    test_statuses = ["open", "closed", "canceled", "active", "draft", "invalid"]
    for status in test_statuses:
        valid = is_valid_status(status)
        emoji = get_status_emoji(status)
        desc = get_status_description(status)
        print(f"   {emoji} '{status}': {'‚úÖ' if valid else '‚ùå'} - {desc}")

    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üí° –ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç–∞—Ç—É—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")


if __name__ == "__main__":
    main()
