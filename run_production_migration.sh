#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –º–∏–≥—Ä–∞—Ü–∏–∏
# –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ü–†–û–î–ê–ö–®–ï–ù –ú–ò–ì–†–ê–¶–ò–Ø: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü —Å–æ–±—ã—Ç–∏–π"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [ -z "$DATABASE_URL" ]; then
        error "DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: export DATABASE_URL='postgresql://user:pass@host:port/db'"
        exit 1
    fi
    
    success "DATABASE_URL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
create_backup() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    
    BACKUP_FILE="backup_before_migration_$(date +%Y%m%d_%H%M%S).sql"
    
    if pg_dump "$DATABASE_URL" > "$BACKUP_FILE"; then
        success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $BACKUP_FILE"
        echo "–†–∞–∑–º–µ—Ä: $(du -h "$BACKUP_FILE" | cut -f1)"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏!"
        exit 1
    fi
}

# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
pre_checks() {
    log "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫..."
    
    if python migrate_events_production.py --check-only; then
        success "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"
    else
        error "–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã!"
        exit 1
    fi
}

# Dry-run —Ç–µ—Å—Ç
dry_run_test() {
    log "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ dry-run —Ç–µ—Å—Ç–∞..."
    
    if python migrate_events_production.py --dry-run; then
        success "Dry-run —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω"
    else
        error "Dry-run —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω!"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è
run_migration() {
    log "–ó–∞–ø—É—Å–∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω –º–∏–≥—Ä–∞—Ü–∏–∏..."
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    echo ""
    warning "–í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!"
    echo "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤: $BACKUP_FILE"
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é? (yes/no): " -r
    
    if [[ $REPLY =~ ^[Yy]([Ee][Ss])?$ ]]; then
        if python migrate_events_production.py; then
            success "–ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
        else
            error "–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏!"
            echo "–î–ª—è –æ—Ç–∫–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: psql \$DATABASE_URL -f migrations/rollback_merge_events.sql"
            exit 1
        fi
    else
        warning "–ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
verify_result() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    psql "$DATABASE_URL" -c "
        SELECT 
            source,
            COUNT(*) as count,
            MIN(created_at_utc) as earliest,
            MAX(created_at_utc) as latest
        FROM events 
        WHERE source IS NOT NULL
        GROUP BY source
        ORDER BY count DESC;
    "
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    DUPLICATES=$(psql "$DATABASE_URL" -t -c "
        SELECT COUNT(*) FROM (
            SELECT source, external_id, COUNT(*) 
            FROM events 
            WHERE source IS NOT NULL 
            GROUP BY source, external_id 
            HAVING COUNT(*) > 1
        ) duplicates;
    " | tr -d ' ')
    
    if [ "$DUPLICATES" -eq 0 ]; then
        success "–î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    else
        warning "–ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: $DUPLICATES"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–¥–µ–∫—Å—ã
    INDEX_COUNT=$(psql "$DATABASE_URL" -t -c "
        SELECT COUNT(*) 
        FROM pg_indexes 
        WHERE tablename = 'events' 
        AND indexname LIKE 'idx_events_%';
    " | tr -d ' ')
    
    success "–°–æ–∑–¥–∞–Ω–æ –∏–Ω–¥–µ–∫—Å–æ–≤: $INDEX_COUNT"
}

# Cleanup —Å—Ç–∞—Ä—ã—Ö —Ç–∞–±–ª–∏—Ü
cleanup_old_tables() {
    log "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ cleanup —Å—Ç–∞—Ä—ã—Ö —Ç–∞–±–ª–∏—Ü..."
    
    echo ""
    read -p "–£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã events_parser –∏ events_user? (yes/no): " -r
    
    if [[ $REPLY =~ ^[Yy]([Ee][Ss])?$ ]]; then
        if python cleanup_old_events_tables.py; then
            success "Cleanup –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        else
            warning "Cleanup –Ω–µ —É–¥–∞–ª—Å—è, –Ω–æ –º–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        fi
    else
        warning "Cleanup –ø—Ä–æ–ø—É—â–µ–Ω"
    fi
}

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
final_report() {
    echo ""
    success "=========================================="
    success "–ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
    success "=========================================="
    echo ""
    echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:"
    echo "  ‚Ä¢ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $BACKUP_FILE"
    echo "  ‚Ä¢ –¢–∞–±–ª–∏—Ü—ã –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã: events_parser + events_user ‚Üí events"
    echo "  ‚Ä¢ events_community –æ—Å—Ç–∞–ª–∞—Å—å –æ—Ç–¥–µ–ª—å–Ω–æ"
    echo "  ‚Ä¢ –°–æ–∑–¥–∞–Ω—ã –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—è: geo_hash, starts_at_normalized"
    echo "  ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω—ã —á–∞—Å—Ç–∏—á–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏"
    echo ""
    echo "üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "  ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"
    echo "  ‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
    echo "  ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é"
    echo ""
    echo "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞:"
    echo "  ‚Ä¢ –û—Ç–∫–∞—Ç: psql \$DATABASE_URL -f migrations/rollback_merge_events.sql"
    echo "  ‚Ä¢ –õ–æ–≥–∏: check logs/ directory"
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–¥–∞–∫—à–µ–Ω –º–∏–≥—Ä–∞—Ü–∏—é..."
    echo ""
    
    check_env
    create_backup
    pre_checks
    dry_run_test
    run_migration
    verify_result
    cleanup_old_tables
    final_report
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'error "–ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"; exit 1' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@"
