#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
–≠—Ç–æ—Ç —Ñ–∞–π–ª –ù–ï –≤–ª–∏—è–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))


def test_imports():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –º–æ–¥—É–ª—è"""
    try:
        print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False


def test_states():
    """–¢–µ—Å—Ç FSM —Å–æ—Å—Ç–æ—è–Ω–∏–π"""
    try:
        from group_chat_handlers import GroupCreate

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã
        states = [
            GroupCreate.waiting_for_title,
            GroupCreate.waiting_for_datetime,
            GroupCreate.waiting_for_city,
            GroupCreate.waiting_for_location,
            GroupCreate.waiting_for_description,
        ]
        print(f"‚úÖ FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã: {len(states)} —Å–æ—Å—Ç–æ—è–Ω–∏–π")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ FSM —Å–æ—Å—Ç–æ—è–Ω–∏–π: {e}")
        return False


def test_service_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É"""
    try:
        from utils.community_events_service import CommunityEventsService

        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
        CommunityEventsService()
        print("‚úÖ CommunityEventsService —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤")
    print("=" * 60)

    tests = [
        ("–ò–º–ø–æ—Ä—Ç—ã", test_imports),
        ("FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è", test_states),
        ("–°–µ—Ä–≤–∏—Å", test_service_connection),
    ]

    passed = 0
    total = len(tests)

    for test_name, test_func in tests:
        print(f"\nüîç –¢–µ—Å—Ç: {test_name}")
        if test_func():
            passed += 1
        else:
            print(f"‚ùå –¢–µ—Å—Ç {test_name} –ø—Ä–æ–≤–∞–ª–µ–Ω")

    print("\n" + "=" * 60)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")

    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ú–æ–¥—É–ª—å –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.")
        return True
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
        return False


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
