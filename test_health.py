#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ health check —Å–µ—Ä–≤–µ—Ä–∞
"""

import asyncio
import time

import aiohttp


async def test_health_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç health check endpoints"""

    # URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Railway URL)
    base_url = "http://localhost:8000"  # –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    async with aiohttp.ClientSession() as session:
        # –¢–µ—Å—Ç 1: Health check
        print("üîç –¢–µ—Å—Ç–∏—Ä—É—é /health endpoint...")
        try:
            async with session.get(f"{base_url}/health") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ /health —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
                else:
                    print(f"‚ùå /health –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /health: {e}")

        # –¢–µ—Å—Ç 2: Ping endpoint
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É—é /ping endpoint...")
        try:
            async with session.get(f"{base_url}/ping") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ /ping —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
                else:
                    print(f"‚ùå /ping –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /ping: {e}")

        # –¢–µ—Å—Ç 3: Root endpoint
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É—é / endpoint...")
        try:
            async with session.get(f"{base_url}/") as response:
                if response.status == 200:
                    data = await response.json()
                    print(f"‚úÖ / —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
                else:
                    print(f"‚ùå / –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /: {e}")


def test_keep_alive():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç keep-alive –º–µ—Ö–∞–Ω–∏–∑–º"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É—é keep-alive –º–µ—Ö–∞–Ω–∏–∑–º...")

    for i in range(3):
        print(f"   Ping {i + 1}/3: {time.strftime('%H:%M:%S')}")
        time.sleep(2)

    print("‚úÖ Keep-alive —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")


if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check —Å–µ—Ä–≤–µ—Ä–∞ EventBot")
    print("=" * 50)

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º health check endpoints
    asyncio.run(test_health_endpoints())

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º keep-alive
    test_keep_alive()

    print("\nüéØ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Railway:")
    print("1. –ó–∞–º–µ–Ω–∏ base_url –Ω–∞ —Ç–≤–æ–π Railway URL")
    print("2. –£–±–µ–¥–∏—Å—å —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    print("3. –ó–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
