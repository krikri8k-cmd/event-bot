"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±—ã—Ç–∏—è —Å –∫–Ω–æ–ø–∫–æ–π "–ú–∞—Ä—à—Ä—É—Ç"
"""

import datetime as dt
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from bot_enhanced_v3 import build_maps_url, render_event_html


class TestRenderEventCardRoute:
    """–¢–µ—Å—Ç—ã –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ–±—ã—Ç–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –ú–∞—Ä—à—Ä—É—Ç"""

    def base_event(self, **kwargs):
        """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏"""
        event = {
            "id": "1",
            "type": "source",
            "title": "Test Event",
            "start": dt.datetime.now(dt.UTC),
            "when_str": "—Å–µ–≥–æ–¥–Ω—è –≤ 15:00",
            "distance_km": 2.5,
            "source_url": "https://valid.site/event",
        }
        event.update(kwargs)
        return event

    def test_route_with_venue_name(self):
        """–¢–µ—Å—Ç A: –ï—Å—Ç—å venue (–Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞)"""
        event = self.base_event(venue_name="Museum Bali", address=None, coords=None)

        html = render_event_html(event, 1)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ HTML –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ú–∞—Ä—à—Ä—É—Ç —Å venue
        assert "üöó" in html
        assert "–ú–∞—Ä—à—Ä—É—Ç" in html
        assert "Museum+Bali" in html or "Museum%2BBali" in html
        assert "https://www.google.com/maps/search/?api=1&query=" in html

    def test_route_with_address(self):
        """–¢–µ—Å—Ç B: –ù–µ—Ç venue, –Ω–æ –µ—Å—Ç—å address"""
        event = self.base_event(
            venue_name=None, address="Jl. Danau Tamblingan 80, Sanur", coords=None
        )

        html = render_event_html(event, 1)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ HTML –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ú–∞—Ä—à—Ä—É—Ç —Å –∞–¥—Ä–µ—Å–æ–º
        assert "üöó" in html
        assert "–ú–∞—Ä—à—Ä—É—Ç" in html
        assert "Jl.+Danau+Tamblingan+80" in html or "Jl.%2BDanau%2BTamblingan%2B80" in html
        assert "https://www.google.com/maps/search/?api=1&query=" in html

    def test_route_with_coords(self):
        """–¢–µ—Å—Ç C: –ï—Å—Ç—å —Ç–æ–ª—å–∫–æ coords"""
        event = self.base_event(venue_name=None, address=None, lat=-8.67, lng=115.25)

        html = render_event_html(event, 1)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ HTML –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –ú–∞—Ä—à—Ä—É—Ç —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
        assert "üöó" in html
        assert "–ú–∞—Ä—à—Ä—É—Ç" in html
        assert "-8.67,115.25" in html
        assert "https://www.google.com/maps/search/?api=1&query=" in html

    def test_route_with_no_location(self):
        """–¢–µ—Å—Ç D: –ù–µ—Ç venue/address/coords"""
        event = self.base_event(venue_name=None, address=None, coords=None)

        html = render_event_html(event, 1)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è —Ñ—Ä–∞–∑–∞ –∏ –∫–Ω–æ–ø–∫–∞ –ú–∞—Ä—à—Ä—É—Ç –≤—Å–µ —Ä–∞–≤–Ω–æ –µ—Å—Ç—å
        assert "üìç –õ–æ–∫–∞—Ü–∏—è —É—Ç–æ—á–Ω—è–µ—Ç—Å—è" in html
        assert "üöó" in html
        assert "–ú–∞—Ä—à—Ä—É—Ç" in html
        # –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ Google Maps
        assert "https://www.google.com/maps" in html

    def test_route_priority_venue_over_address(self):
        """–¢–µ—Å—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞: venue_name > address"""
        event = self.base_event(
            venue_name="Cafe Moka", address="Jl. Danau Tamblingan 80, Sanur", coords=None
        )

        html = render_event_html(event, 1)

        # –î–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è venue_name, –∞ –Ω–µ address
        assert "Cafe+Moka" in html or "Cafe%2BMoka" in html
        assert "Jl.+Danau+Tamblingan" not in html

    def test_route_priority_address_over_coords(self):
        """–¢–µ—Å—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞: address > coords"""
        event = self.base_event(
            venue_name=None, address="Jl. Danau Tamblingan 80, Sanur", lat=-8.67, lng=115.25
        )

        html = render_event_html(event, 1)

        # –î–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è address, –∞ –Ω–µ coords
        assert "Jl.+Danau+Tamblingan" in html or "Jl.%2BDanau%2BTamblingan" in html
        assert "-8.67,115.25" not in html

    def test_route_priority_venue_over_all(self):
        """–¢–µ—Å—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞: venue_name > address > coords"""
        event = self.base_event(
            venue_name="Museum Bali",
            address="Jl. Danau Tamblingan 80, Sanur",
            lat=-8.67,
            lng=115.25,
        )

        html = render_event_html(event, 1)

        # –î–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è venue_name
        assert "Museum+Bali" in html or "Museum%2BBali" in html
        assert "Jl.+Danau+Tamblingan" not in html
        assert "-8.67,115.25" not in html

    def test_venue_display_priority(self):
        """–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è venue –≤ –∫–∞—Ä—Ç–æ—á–∫–µ"""
        # –° venue_name
        event = self.base_event(venue_name="Cafe Moka")
        html = render_event_html(event, 1)
        assert "Cafe Moka" in html

        # –° address (–±–µ–∑ venue_name)
        event = self.base_event(venue_name=None, address="Jl. Danau Tamblingan 80")
        html = render_event_html(event, 1)
        assert "Jl. Danau Tamblingan 80" in html

        # –° coords (–±–µ–∑ venue_name –∏ address)
        event = self.base_event(venue_name=None, address=None, lat=-8.67, lng=115.25)
        html = render_event_html(event, 1)
        assert "–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (-8.6700, 115.2500)" in html

        # –ë–µ–∑ –Ω–∏—á–µ–≥–æ
        event = self.base_event(venue_name=None, address=None, coords=None)
        html = render_event_html(event, 1)
        assert "üìç –õ–æ–∫–∞—Ü–∏—è —É—Ç–æ—á–Ω—è–µ—Ç—Å—è" in html

    def test_build_maps_url_directly(self):
        """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ build_maps_url –Ω–∞–ø—Ä—è–º—É—é"""
        # –° venue_name
        event = {"venue_name": "Museum Bali"}
        url = build_maps_url(event)
        assert "Museum+Bali" in url or "Museum%2BBali" in url
        assert "https://www.google.com/maps/search/?api=1&query=" in url

        # –° address
        event = {"address": "Jl. Danau Tamblingan 80, Sanur"}
        url = build_maps_url(event)
        assert "Jl.+Danau+Tamblingan" in url or "Jl.%2BDanau%2BTamblingan" in url

        # –° coords
        event = {"lat": -8.67, "lng": 115.25}
        url = build_maps_url(event)
        assert "-8.67,115.25" in url

        # –ë–µ–∑ –Ω–∏—á–µ–≥–æ
        event = {}
        url = build_maps_url(event)
        assert url == "https://www.google.com/maps"

    def test_new_venue_structure(self):
        """–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã venue (venue.name, venue.address)"""
        event = self.base_event(
            venue={"name": "New Venue", "address": "New Address"},
            venue_name="Old Venue",  # –¥–æ–ª–∂–µ–Ω –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
            address="Old Address",  # –¥–æ–ª–∂–µ–Ω –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        )

        html = render_event_html(event, 1)

        # –î–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
        assert "New Venue" in html
        assert "Old Venue" not in html
        assert "New+Venue" in html or "New%2BVenue" in html

    def test_source_url_in_card(self):
        """–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ"""
        # –° –≤–∞–ª–∏–¥–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º
        event = self.base_event(source_url="https://valid.site/event")
        html = render_event_html(event, 1)
        assert "üîó" in html
        assert "–ò—Å—Ç–æ—á–Ω–∏–∫" in html
        assert "https://valid.site/event" in html

        # –° –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º
        event = self.base_event(source_url="https://example.com/event")
        html = render_event_html(event, 1)
        assert "‚ÑπÔ∏è –ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ —É–∫–∞–∑–∞–Ω" in html
        assert "https://example.com/event" not in html

    def test_card_structure_complete(self):
        """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–∞—Ä—Ç–æ—á–∫–∏"""
        event = self.base_event(venue_name="Test Venue", source_url="https://valid.site/event")

        html = render_event_html(event, 1)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞—Ä—Ç–æ—á–∫–∏
        assert "1) <b>Test Event</b>" in html
        assert "—Å–µ–≥–æ–¥–Ω—è –≤ 15:00" in html
        assert "(2.5 –∫–º)" in html  # —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
        assert "üìç Test Venue" in html
        assert 'üîó <a href="https://valid.site/event">–ò—Å—Ç–æ—á–Ω–∏–∫</a>' in html
        assert "üöó <a href=" in html
        assert "–ú–∞—Ä—à—Ä—É—Ç</a>" in html
