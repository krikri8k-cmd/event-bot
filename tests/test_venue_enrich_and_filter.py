import datetime as dt
import os
import sys

sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from logging_helpers import DropStats
from venue_enrich import enrich_venue_from_text


# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def get_source_url(e):
    return e.get("source_url")


def is_blacklisted_url(url):
    return url and "example.com" in url


def prepare_events_for_feed(events, user_point=(0, 0)):
    """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è prepare_events_for_feed –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    from collections import Counter

    prepared, drop = [], DropStats()
    kept_by = Counter(ai=0, user=0, source=0)

    for e in events:
        # –û–±–æ–≥–∞—â–∞–µ–º –ª–æ–∫–∞—Ü–∏—é
        e = enrich_venue_from_text(e)

        title = (e.get("title") or "").strip() or "‚Äî"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º URL
        if not get_source_url(e):
            drop.add("no_url", title)
            continue

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞—Ü–∏—é
        if not (e.get("venue_name") or e.get("address") or e.get("coords") or (e.get("lat") and e.get("lng"))):
            drop.add("no_venue_or_location", title)
            continue

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
        if is_blacklisted_url(get_source_url(e)):
            drop.add("blacklist_domain", title)
            continue

        prepared.append(e)
        kept_by[e.get("type", "source")] += 1

    # –ü–µ—á–∞—Ç–∞–µ–º —Å–≤–æ–¥–∫—É (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ logger.info)
    print(drop.summary(kept_by, total=len(events)))
    return prepared


def base_event(**kw):
    """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    ev = dict(
        id="1",
        type="source",
        title="Test",
        start=dt.datetime.now(dt.UTC),
        source_url="https://valid.example/item",
    )
    ev.update(kw)
    return ev


def test_enrich_from_venue_name():
    """–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    e = base_event(raw_description="–í—Å—Ç—Ä–µ—á–∞ –≤ Cafe Moka –Ω–∞ –∑–∞–∫–∞—Ç–µ")
    print(f"–î–æ –æ–±–æ–≥–∞—â–µ–Ω–∏—è: {e}")
    out = prepare_events_for_feed([e])
    print(f"–ü–æ—Å–ª–µ –æ–±–æ–≥–∞—â–µ–Ω–∏—è: {out[0] if out else 'None'}")
    assert out and out[0].get("venue_name") == "Cafe Moka"
    print("‚úÖ test_enrich_from_venue_name passed")


def test_enrich_from_address_hint():
    """–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –ø–æ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º"""
    e = base_event(raw_description="–°–æ–±–∏—Ä–∞–µ–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: —É–ª. –ü—É—à–∫–∏–Ω–∞, –¥–æ–º 10")
    out = prepare_events_for_feed([e])
    assert out and out[0].get("address")
    print("‚úÖ test_enrich_from_address_hint passed")


def test_enrich_from_coords():
    """–¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    e = base_event(raw_description="–ù–∞ –∫–∞—Ä—Ç–µ: -8.670000, 115.250000")
    out = prepare_events_for_feed([e])
    assert out and out[0].get("coords") == (-8.67, 115.25)
    print("‚úÖ test_enrich_from_coords passed")


def test_google_calendar_url():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ Google Calendar —Å—Å—ã–ª–æ–∫"""
    e = base_event(
        source_url="https://calendar.google.com/calendar/event?eid=abc123",
        venue_name="Test Venue",  # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–∫–∞—Ü–∏—é
    )
    out = prepare_events_for_feed([e])
    assert out  # –î–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ñ–∏–ª—å—Ç—Ä
    print("‚úÖ test_google_calendar_url passed")


def test_blacklist_domain():
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–æ–≤ –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞"""
    e = base_event(source_url="https://example.com/event")
    out = prepare_events_for_feed([e])
    assert not out  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ
    print("‚úÖ test_blacklist_domain passed")


def test_no_url_filter():
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π –±–µ–∑ URL"""
    e = base_event(source_url=None)
    out = prepare_events_for_feed([e])
    assert not out  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ
    print("‚úÖ test_no_url_filter passed")


def test_no_location_filter():
    """–¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π –±–µ–∑ –ª–æ–∫–∞—Ü–∏–∏"""
    e = base_event(venue_name=None, address=None, lat=None, lng=None)
    out = prepare_events_for_feed([e])
    assert not out  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ
    print("‚úÖ test_no_location_filter passed")


if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...")

    test_enrich_from_venue_name()
    test_enrich_from_address_hint()
    test_enrich_from_coords()
    test_google_calendar_url()
    test_blacklist_domain()
    test_no_url_filter()
    test_no_location_filter()

    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
