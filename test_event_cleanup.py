#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
"""

import asyncio
import logging

from config import load_settings
from database import get_engine, init_engine
from utils.event_cleanup import cleanup_old_events, cleanup_old_moments, get_active_events_count

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def test_event_cleanup():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—á–∏—Å—Ç–∫—É —Å–æ–±—ã—Ç–∏–π"""
    print("üßπ –¢–ï–°–¢ –û–ß–ò–°–¢–ö–ò –°–û–ë–´–¢–ò–ô")
    print("=" * 50)

    settings = load_settings()
    init_engine(settings.database_url)
    engine = get_engine()

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("1Ô∏è‚É£ –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –°–û–ë–´–¢–ò–ô")
    print("-" * 30)

    try:
        counts = get_active_events_count(engine, "bali")

        print("üìä –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –ë–∞–ª–∏:")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ: {counts['user_events']}")
        print(f"   ü§ñ –ü–∞—Ä—Å–µ—Ä–Ω—ã–µ: {counts['parser_events']}")
        print(f"   üìã –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ: {counts['total_events']}")
        print(f"   üïí –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ: {counts['date_range']}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")
        print()

    # 2. –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–±—ã—Ç–∏—è
    print("2Ô∏è‚É£ –û–ß–ò–°–¢–ö–ê –°–¢–ê–†–´–• –°–û–ë–´–¢–ò–ô")
    print("-" * 30)

    try:
        deleted_count = cleanup_old_events(engine, "bali")
        print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {deleted_count}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ: {e}")
        print()

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    print("3Ô∏è‚É£ –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–°–õ–ï –û–ß–ò–°–¢–ö–ò")
    print("-" * 30)

    try:
        counts = get_active_events_count(engine, "bali")

        print("üìä –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ –ë–∞–ª–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ: {counts['user_events']}")
        print(f"   ü§ñ –ü–∞—Ä—Å–µ—Ä–Ω—ã–µ: {counts['parser_events']}")
        print(f"   üìã –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ: {counts['total_events']}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: {e}")
        print()

    # 4. –û—á–∏—â–∞–µ–º –º–æ–º–µ–Ω—Ç—ã
    print("4Ô∏è‚É£ –û–ß–ò–°–¢–ö–ê –ú–û–ú–ï–ù–¢–û–í")
    print("-" * 30)

    try:
        moments_deleted = cleanup_old_moments(engine)
        print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –º–æ–º–µ–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ: {moments_deleted}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –º–æ–º–µ–Ω—Ç–æ–≤: {e}")
        print()

    print("=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ starts_at")
    print("‚úÖ –°–æ–±—ã—Ç–∏—è –æ—á–∏—â–∞—é—Ç—Å—è –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è")
    print("‚úÖ –ú–æ–º–µ–Ω—Ç—ã –æ—á–∏—â–∞—é—Ç—Å—è –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏–∏ TTL")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        await test_event_cleanup()
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False


if __name__ == "__main__":
    success = asyncio.run(main())
    exit(0 if success else 1)
