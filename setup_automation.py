#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
"""

import logging
import sys
from datetime import datetime

from config import load_settings
from database import get_engine, init_engine
from modern_scheduler import ModernEventScheduler
from utils.unified_events_service import UnifiedEventsService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(name)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)


def check_configuration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏"""
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")

    settings = load_settings()

    logger.info("üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–æ–≤:")
    logger.info(f"   üå¥ BaliForum: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if settings.enable_baliforum else '‚ùå –≤—ã–∫–ª—é—á–µ–Ω'}")
    logger.info(f"   ü§ñ AI –ø–∞—Ä—Å–∏–Ω–≥: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if settings.ai_parse_enable else '‚ùå –≤—ã–∫–ª—é—á–µ–Ω'}")
    logger.info(f"   üé≠ AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if settings.ai_generate_synthetic else '‚ùå –≤—ã–∫–ª—é—á–µ–Ω'}")
    logger.info(f"   üìÖ Meetup: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if settings.enable_meetup_api else '‚ùå –≤—ã–∫–ª—é—á–µ–Ω'}")
    logger.info(f"   üé´ Eventbrite: {'‚úÖ –≤–∫–ª—é—á–µ–Ω' if settings.enable_eventbrite_api else '‚ùå –≤—ã–∫–ª—é—á–µ–Ω'}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏
    logger.info("üîë API –∫–ª—é—á–∏:")
    logger.info(f"   OpenAI: {'‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' if settings.openai_api_key else '‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    logger.info(f"   Google Maps: {'‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' if settings.google_maps_api_key else '‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    logger.info(f"   Meetup: {'‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' if settings.meetup_api_key else '‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")

    return settings


def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    logger.info("üóÉÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    try:
        settings = load_settings()
        init_engine(settings.database_url)
        engine = get_engine()
        service = UnifiedEventsService(engine)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = service.get_events_stats("bali")
        logger.info(
            f"   üìä –°–æ–±—ã—Ç–∏—è –≤ –ë–∞–ª–∏: {stats['total_events']} "
            f"(–ø–∞—Ä—Å–µ—Ä–Ω—ã—Ö: {stats['parser_events']}, "
            f"–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö: {stats['user_events']})"
        )

        return True

    except Exception as e:
        logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False


def run_test_cycle():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ü–∏–∫–ª –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    logger.info("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞...")

    try:
        scheduler = ModernEventScheduler()
        scheduler.run_full_ingest()
        logger.info("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True

    except Exception as e:
        logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞: {e}")
        return False


def start_automation():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏...")

    try:
        scheduler = ModernEventScheduler()
        scheduler.start()

        logger.info("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!")
        logger.info("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:")
        logger.info("   ‚Ä¢ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –ø–∞—Ä—Å–∏–Ω–≥–∞: –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç")
        logger.info("   ‚Ä¢ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π: –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤")
        logger.info("   ‚Ä¢ –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫: —Å–µ–π—á–∞—Å")

        return scheduler

    except Exception as e:
        logger.error(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏: {e}")
        return None


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üéØ === –ù–ê–°–¢–†–û–ô–ö–ê –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò –°–û–ë–´–¢–ò–ô ===")
    logger.info(f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now()}")

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    settings = check_configuration()

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not check_database():
        logger.error("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
        sys.exit(1)

    # 3. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ü–∏–∫–ª
    if not run_test_cycle():
        logger.error("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ü–∏–∫–ª –Ω–µ –ø—Ä–æ—à–µ–ª. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
        sys.exit(1)

    # 4. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n" + "=" * 50)
    print("üéØ –ì–û–¢–û–í–û –ö –ó–ê–ü–£–°–ö–£ –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò!")
    print("=" * 50)
    print("üìã –ß—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å:")
    print("   ‚Ä¢ –ö–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤: –ø–∞—Ä—Å–∏–Ω–≥ BaliForum (2 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å)")
    if settings.ai_generate_synthetic:
        print("   ‚Ä¢ –ö–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è AI —Å–æ–±—ã—Ç–∏–π")
    print("   ‚Ä¢ –ö–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤: –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π")
    print("   ‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
    print()

    response = input("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é? (y/n): ").strip().lower()

    if response in ["y", "yes", "–¥–∞", "–¥"]:
        scheduler = start_automation()

        if scheduler:
            try:
                print("\n‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                print("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
                print("üìä –õ–æ–≥–∏ –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...")
                print("-" * 50)

                # –ñ–¥–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
                import time

                while True:
                    time.sleep(10)

            except KeyboardInterrupt:
                logger.info("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
                scheduler.stop()
                logger.info("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é")
            sys.exit(1)
    else:
        logger.info("üõë –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞")
        print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–∑–∂–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python setup_automation.py")


if __name__ == "__main__":
    main()
