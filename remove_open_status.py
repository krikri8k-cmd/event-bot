#!/usr/bin/env python3
"""
–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ open –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º active)
"""

import os

from dotenv import load_dotenv
from sqlalchemy import create_engine, text


def main():
    print("üîß –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ 'open' –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º 'active')")
    print("=" * 60)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv("app.local.env")

    database_url = os.getenv("DATABASE_URL")
    if not database_url:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    engine = create_engine(database_url)

    try:
        with engine.begin() as conn:
            print("1. üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ —Å—Ç–∞—Ç—É—Å—ã:")
            result = conn.execute(
                text("""
                SELECT status, COUNT(*) as count
                FROM events
                GROUP BY status
                ORDER BY count DESC
            """)
            ).fetchall()

            for row in result:
                print(f"   - {row[0]}: {row[1]} —Å–æ–±—ã—Ç–∏–π")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ–±—ã—Ç–∏—è —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º open
            open_count = conn.execute(
                text("""
                SELECT COUNT(*) FROM events WHERE status = 'open'
            """)
            ).scalar()

            if open_count > 0:
                print(f"\n2. üîÑ –û–±–Ω–æ–≤–ª—è–µ–º {open_count} —Å–æ–±—ã—Ç–∏–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'open' –Ω–∞ 'active':")
                conn.execute(
                    text("""
                    UPDATE events
                    SET status = 'active', updated_at_utc = NOW()
                    WHERE status = 'open'
                """)
                )
                print("   ‚úÖ –°–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
            else:
                print("\n2. ‚ÑπÔ∏è  –°–æ–±—ã—Ç–∏–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'open' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

            print("\n3. üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ:")
            try:
                conn.execute(text("ALTER TABLE events DROP CONSTRAINT events_status_check"))
                print("   ‚úÖ –°—Ç–∞—Ä–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ")
            except Exception as e:
                print(f"   ‚ÑπÔ∏è  –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {e}")

            print("\n4. ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ active, closed, canceled):")
            conn.execute(
                text("""
                ALTER TABLE events
                ADD CONSTRAINT events_status_check
                CHECK (status IN ('active', 'closed', 'canceled'))
            """)
            )
            print("   ‚úÖ –ù–æ–≤–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ")

            print("\n5. üîÑ –û–±–Ω–æ–≤–ª—è–µ–º default –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞:")
            conn.execute(
                text("""
                ALTER TABLE events
                ALTER COLUMN status SET DEFAULT 'active'
            """)
            )
            print("   ‚úÖ Default —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 'active'")

            print("\n6. üìä –§–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã:")
            result = conn.execute(
                text("""
                SELECT status, COUNT(*) as count
                FROM events
                GROUP BY status
                ORDER BY count DESC
            """)
            ).fetchall()

            for row in result:
                print(f"   - {row[0]}: {row[1]} —Å–æ–±—ã—Ç–∏–π")

            print("\nüéâ –°—Ç–∞—Ç—É—Å 'open' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã!")
            print("üí° –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å—ã: active, closed, canceled")
            print("üìù Default —Å—Ç–∞—Ç—É—Å: active")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    main()
