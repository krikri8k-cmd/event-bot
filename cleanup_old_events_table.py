#!/usr/bin/env python3
"""
–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π —Ç–∞–±–ª–∏—Ü—ã events
"""

from sqlalchemy import text

from config import load_settings
from database import get_engine, init_engine


def cleanup_old_events_table():
    settings = load_settings()
    init_engine(settings.database_url)
    engine = get_engine()

    with engine.connect() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü–µ events
        result = conn.execute(text("SELECT COUNT(*) FROM events")).fetchone()
        print(f"üìä –°–æ–±—ã—Ç–∏–π –≤ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü–µ 'events': {result[0]}")

        if result[0] == 0:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'events' –ø—É—Å—Ç–∞—è, –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —É–¥–∞–ª–∏—Ç—å")

            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É
            conn.execute(text("DROP TABLE IF EXISTS events"))
            conn.commit()
            print("üóëÔ∏è –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ 'events' —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("‚ö†Ô∏è –í —Ç–∞–±–ª–∏—Ü–µ 'events' –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ, –Ω–µ —É–¥–∞–ª—è–µ–º")

        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
        result = conn.execute(
            text("""
            SELECT table_name, table_type
            FROM information_schema.tables
            WHERE table_schema = 'public'
            AND table_name LIKE 'events%'
            ORDER BY table_name
        """)
        ).fetchall()

        print("üìã –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–∞–±–ª–∏—Ü—ã –∏ VIEW:")
        for row in result:
            print(f"  - {row[0]} ({row[1]})")

        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ events_all —Ä–∞–±–æ—Ç–∞–µ—Ç
        result = conn.execute(text("SELECT COUNT(*) FROM events_all")).fetchone()
        print(f"‚úÖ VIEW 'events_all' —Å–æ–¥–µ—Ä–∂–∏—Ç {result[0]} —Å–æ–±—ã—Ç–∏–π")


if __name__ == "__main__":
    cleanup_old_events_table()
