#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —Ñ—É–Ω–∫—Ü–∏–µ–π "–°–ø—Ä—è—Ç–∞—Ç—å –±–æ—Ç–∞"
"""

import logging

from sqlalchemy import create_engine, text

from config import load_settings
from database import BotMessage, get_session

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def check_bot_messages(chat_id: int):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ bot_messages –¥–ª—è —á–∞—Ç–∞"""
    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º bot_messages –¥–ª—è —á–∞—Ç–∞ {chat_id}:")

    with get_session() as session:
        messages = (
            session.query(BotMessage)
            .filter(BotMessage.chat_id == chat_id)
            .order_by(BotMessage.created_at.desc())
            .limit(10)
            .all()
        )

        if not messages:
            print("‚ùå –í —Ç–∞–±–ª–∏—Ü–µ bot_messages –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞!")
            print("   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–µ —Ç—Ä–µ–∫–∞—é—Ç—Å—è.")
            return False

        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(messages)} –∑–∞–ø–∏—Å–µ–π:")
        for msg in messages:
            status = "üóëÔ∏è —É–¥–∞–ª–µ–Ω–æ" if msg.deleted else "‚úÖ –∞–∫—Ç–∏–≤–Ω–æ"
            print(f"   ID: {msg.message_id}, Tag: {msg.tag}, Status: {status}, Created: {msg.created_at}")

        active_count = len([m for m in messages if not m.deleted])
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(messages)}")
        print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö (–Ω–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö): {active_count}")
        print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã—Ö: {len(messages) - active_count}")

        return active_count > 0


def check_database_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã bot_messages"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã bot_messages:")

    settings = load_settings()
    engine = create_engine(settings.database_url)

    with engine.connect() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        result = conn.execute(
            text("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables
                WHERE table_name = 'bot_messages'
            );
        """)
        )
        exists = result.fetchone()[0]

        if not exists:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ bot_messages –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return False

        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ bot_messages —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        result = conn.execute(
            text("""
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns
            WHERE table_name = 'bot_messages'
            ORDER BY ordinal_position;
        """)
        )

        print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
        for row in result:
            print(f"   {row[0]}: {row[1]} ({'NULL' if row[2] == 'YES' else 'NOT NULL'})")

        return True


async def simulate_hide_bot(chat_id: int):
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞"""
    print(f"\nüé≠ –°–∏–º—É–ª—è—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –±–æ—Ç–∞ –¥–ª—è —á–∞—Ç–∞ {chat_id}:")

    from aiogram import Bot

    from utils.messaging_utils import delete_all_tracked

    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π –±–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    bot = Bot(token="dummy")  # –¢–æ–∫–µ–Ω –Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞

    with get_session() as session:
        try:
            deleted_count = await delete_all_tracked(bot, session, chat_id=chat_id)
            print(f"‚úÖ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ: {deleted_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ '–°–ø—Ä—è—Ç–∞—Ç—å –±–æ—Ç–∞'")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î
    if not check_database_structure():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏.")
        return

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID —á–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    try:
        chat_id = int(input("\nüìù –í–≤–µ–¥–∏—Ç–µ ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: "))
    except ValueError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID —á–∞—Ç–∞")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ bot_messages
    has_messages = check_bot_messages(chat_id)

    if has_messages:
        print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ–æ–±—â–µ–Ω–∏—è —Ç—Ä–µ–∫–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–æ—Ç - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —É –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–æ '–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π'")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏ TelegramForbiddenError")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞–π–¥–µ–Ω–∞: —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–µ —Ç—Ä–µ–∫–∞—é—Ç—Å—è!")
        print("\nüí° –†–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–¥—É—Ç —á–µ—Ä–µ–∑ send_tracked()")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ ensure_panel() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å await")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤ group_router –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏")


if __name__ == "__main__":
    main()
