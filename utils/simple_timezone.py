"""
–ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º
"""

from datetime import UTC, datetime
from zoneinfo import ZoneInfo

# –ß–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º
CITY_TIMEZONES = {
    "bali": "Asia/Makassar",  # GMT+8
    "moscow": "Europe/Moscow",  # GMT+3
    "spb": "Europe/Moscow",  # GMT+3
    "jakarta": "Asia/Jakarta",  # GMT+7
}


def get_city_timezone(city: str) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –≥–æ—Ä–æ–¥–∞

    Args:
        city: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞

    Returns:
        –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ IANA
    """
    return CITY_TIMEZONES.get(city.lower(), "Asia/Makassar")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ë–∞–ª–∏


def get_today_start_utc(city: str) -> datetime:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—á–∞–ª–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è –≤ UTC –¥–ª—è –≥–æ—Ä–æ–¥–∞
    –û–∫–Ω–æ "—Å–µ–≥–æ–¥–Ω—è" = —Å 00:00 –¥–æ 23:59:59 –ø–æ –º–µ—Å—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ä–æ–¥–∞

    Args:
        city: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞

    Returns:
        –ù–∞—á–∞–ª–æ –¥–Ω—è –≤ UTC
    """
    tz_name = get_city_timezone(city)
    tz = ZoneInfo(tz_name)

    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –≥–æ—Ä–æ–¥–µ
    now_local = datetime.now(tz)

    # –ù–∞—á–∞–ª–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è –≤ –≥–æ—Ä–æ–¥–µ (00:00:00)
    start_local = now_local.replace(hour=0, minute=0, second=0, microsecond=0)

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ UTC
    start_utc = start_local.astimezone(UTC)

    return start_utc


def get_tomorrow_start_utc(city: str) -> datetime:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—á–∞–ª–æ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è –≤ UTC –¥–ª—è –≥–æ—Ä–æ–¥–∞
    –û–∫–Ω–æ "—Å–µ–≥–æ–¥–Ω—è" –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –≤ 00:00:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è –ø–æ –º–µ—Å—Ç–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏

    Args:
        city: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞

    Returns:
        –ù–∞—á–∞–ª–æ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è –≤ UTC
    """
    from datetime import timedelta

    tz_name = get_city_timezone(city)
    tz = ZoneInfo(tz_name)

    # –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –≥–æ—Ä–æ–¥–µ
    now_local = datetime.now(tz)

    # –ù–∞—á–∞–ª–æ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è –≤ –≥–æ—Ä–æ–¥–µ (00:00:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è)
    tomorrow_local = now_local.replace(hour=0, minute=0, second=0, microsecond=0) + timedelta(days=1)

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ UTC
    tomorrow_utc = tomorrow_local.astimezone(UTC)

    return tomorrow_utc


def convert_local_to_utc(local_dt: datetime, city: str) -> datetime:
    """
    –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≥–æ—Ä–æ–¥–∞ –≤ UTC

    Args:
        local_dt: –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è (–º–æ–∂–µ—Ç –±—ã—Ç—å naive)
        city: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞

    Returns:
        –í—Ä–µ–º—è –≤ UTC
    """
    tz_name = get_city_timezone(city)
    tz = ZoneInfo(tz_name)

    # –ï—Å–ª–∏ –≤—Ä–µ–º—è naive, –¥–æ–±–∞–≤–ª—è–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≥–æ—Ä–æ–¥–∞
    if local_dt.tzinfo is None:
        local_dt = local_dt.replace(tzinfo=tz)

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ UTC
    return local_dt.astimezone(UTC)


def get_city_from_coordinates(lat: float, lng: float) -> str:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≥–æ—Ä–æ–¥ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (–ø—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞)

    Args:
        lat: –®–∏—Ä–æ—Ç–∞
        lng: –î–æ–ª–≥–æ—Ç–∞

    Returns:
        –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
    """
    # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    if -8.5 <= lat <= -8.0 and 114.0 <= lng <= 116.0:
        return "bali"
    elif 55.0 <= lat <= 56.0 and 37.0 <= lng <= 38.0:
        return "moscow"
    elif 59.0 <= lat <= 60.0 and 29.0 <= lng <= 31.0:
        return "spb"
    elif -6.5 <= lat <= -6.0 and 106.0 <= lng <= 107.0:
        return "jakarta"
    else:
        return "bali"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é


def format_city_time_info(city: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –≥–æ—Ä–æ–¥–∞

    Args:
        city: –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞

    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Ä–µ–º–µ–Ω–∏
    """
    tz_name = get_city_timezone(city)
    tz = ZoneInfo(tz_name)

    now_local = datetime.now(tz)
    today_start_utc = get_today_start_utc(city)
    tomorrow_start_utc = get_tomorrow_start_utc(city)

    return (
        f"üåç –ì–æ—Ä–æ–¥: {city.title()}\n"
        f"üïí –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {tz_name}\n"
        f"‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {now_local.strftime('%Y-%m-%d %H:%M:%S')}\n"
        f"üìÖ –ù–∞—á–∞–ª–æ –¥–Ω—è (UTC): {today_start_utc.isoformat()}\n"
        f"üìÖ –ù–∞—á–∞–ª–æ –∑–∞–≤—Ç—Ä–∞ (UTC): {tomorrow_start_utc.isoformat()}"
    )
