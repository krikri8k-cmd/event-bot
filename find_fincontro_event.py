#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏—è —Å organizer_username = "Fincontro"
"""

import os

from sqlalchemy import text

from database import get_session, init_engine


def find_fincontro_event():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_url = os.getenv("DATABASE_URL", "sqlite:///event_bot.db")
    init_engine(db_url)

    session = get_session()
    try:
        # –ò—â–µ–º —Å–æ–±—ã—Ç–∏–µ —Å username "Fincontro"
        result = session.execute(
            text("""
            SELECT id, title, organizer_id, organizer_username, status, created_at_utc
            FROM events
            WHERE organizer_username LIKE '%Fincontro%'
            OR organizer_username LIKE '%fincontro%'
            OR organizer_username LIKE '%Fin%'
        """)
        )

        fincontro_events = result.fetchall()

        print('üîç –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏—è —Å username "Fincontro":')
        print("=" * 60)

        if fincontro_events:
            for event in fincontro_events:
                print("‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ:")
                print(f"  ID: {event[0]}")
                print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {event[1]}")
                print(f"  Organizer ID: {event[2]}")
                print(f'  Organizer Username: "{event[3]}"')
                print(f"  –°—Ç–∞—Ç—É—Å: {event[4]}")
                print(f"  –°–æ–∑–¥–∞–Ω–æ: {event[5]}")

                # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à—É –ª–æ–≥–∏–∫—É
                print("\n  üéØ –ö–∞–∫ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∞–≤—Ç–æ—Ä:")
                organizer_id = event[2]
                organizer_username = event[3]

                if organizer_id and organizer_username and organizer_username != "None":
                    display = f"üë§ @{organizer_username}"
                    print(f"    {display}")
                    print("    ‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º username!")
                else:
                    display = "üë§ –ê–≤—Ç–æ—Ä"
                    print(f"    {display}")
                    print('    ‚ö†Ô∏è  –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ê–≤—Ç–æ—Ä"')

                print("-" * 50)
        else:
            print('‚ùå –°–æ–±—ã—Ç–∏–µ —Å username "Fincontro" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')

            # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ username –≤ –±–∞–∑–µ
            result = session.execute(
                text("""
                SELECT DISTINCT organizer_username
                FROM events
                WHERE organizer_username IS NOT NULL
                AND organizer_username != "None"
                ORDER BY organizer_username
            """)
            )

            unique_usernames = result.fetchall()
            if unique_usernames:
                print("\nüìã –í—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ username –≤ –±–∞–∑–µ:")
                for username in unique_usernames:
                    print(f'  "{username[0]}"')
            else:
                print("\n‚ùå –í –±–∞–∑–µ –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ username")

        # –ü—Ä–æ–≤–µ—Ä–∏–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π
        result = session.execute(text("SELECT COUNT(*) FROM events"))
        total_events = result.fetchone()[0]
        print(f"\nüìä –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π –≤ –±–∞–∑–µ: {total_events}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()
    finally:
        session.close()


if __name__ == "__main__":
    print("üîç –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏—è —Å username 'Fincontro'...")
    print()
    find_fincontro_event()
