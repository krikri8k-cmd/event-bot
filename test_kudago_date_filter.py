#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ KudaGo —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –¥–∞—Ç–∞–º
"""

import asyncio
import logging
from datetime import datetime, timedelta
from zoneinfo import ZoneInfo

from config import load_settings
from database import get_engine, init_engine
from sources.kudago_source import KudaGoSource

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)


async def test_kudago_date_filter():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä KudaGo —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –¥–∞—Ç–∞–º"""
    settings = load_settings()
    init_engine(settings.database_url)
    get_engine()

    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï KUDAGO –° –§–ò–õ–¨–¢–†–û–ú –ü–û –î–ê–¢–ê–ú")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"KUDAGO_ENABLED: {settings.kudago_enabled}")
    print(f"KUDAGO_DRY_RUN: {settings.kudago_dry_run}")

    if not settings.kudago_enabled:
        print("‚ùå KudaGo –æ—Ç–∫–ª—é—á–µ–Ω!")
        return

    if settings.kudago_dry_run:
        print("‚ö†Ô∏è KudaGo –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ (DRY_RUN)")
    else:
        print("‚úÖ KudaGo –≤ —Ä–∞–±–æ—á–µ–º —Ä–µ–∂–∏–º–µ")

    print()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ
    moscow_tz = ZoneInfo("Europe/Moscow")
    utc_tz = ZoneInfo("UTC")
    now_moscow = datetime.now(moscow_tz)

    today_start = now_moscow.replace(hour=0, minute=0, second=0, microsecond=0)
    tomorrow_end = today_start + timedelta(days=1)

    today_start_utc = today_start.astimezone(utc_tz)
    tomorrow_end_utc = tomorrow_end.astimezone(utc_tz)

    print("üìÖ –í–†–ï–ú–ï–ù–ù–û–ï –û–ö–ù–û:")
    print(f"   –ù–∞—á–∞–ª–æ: {today_start_utc} (UTC)")
    print(f"   –ö–æ–Ω–µ—Ü: {tomorrow_end_utc} (UTC)")
    print(f"   –ù–∞—á–∞–ª–æ: {today_start} (–ú–æ—Å–∫–≤–∞)")
    print(f"   –ö–æ–Ω–µ—Ü: {tomorrow_end} (–ú–æ—Å–∫–≤–∞)")
    print()

    # –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
    source = KudaGoSource()

    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞ –ú–æ—Å–∫–≤—ã
    moscow_lat = 55.7558
    moscow_lng = 37.6173

    print(f"üìç –ò—â–µ–º —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {moscow_lat}, {moscow_lng}")
    print()

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä
        events = await source.fetch_events(moscow_lat, moscow_lng, 15.0)

        print("‚úÖ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")

        if events:
            print()
            print("üìù –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è:")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
            today_events = []
            future_events = []

            for event in events:
                starts_at = event.get("starts_at_utc")
                if starts_at:
                    starts_at_moscow = starts_at.astimezone(moscow_tz)

                    if starts_at_moscow.date() == now_moscow.date():
                        today_events.append((event, starts_at_moscow))
                    elif starts_at_moscow > now_moscow:
                        future_events.append((event, starts_at_moscow))

            print(f"üìÖ –°–æ–±—ã—Ç–∏–π –Ω–∞ –°–ï–ì–û–î–ù–Ø ({now_moscow.date()}): {len(today_events)}")
            for event, time in today_events[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                title = event.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
                location = event.get("location_name", "–ú–µ—Å—Ç–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")
                print(f"   - {title} –≤ {time.strftime('%H:%M')} ({location})")

            print()
            print(f"üìÖ –°–æ–±—ã—Ç–∏–π –Ω–∞ –ë–£–î–£–©–ï–ï: {len(future_events)}")
            for event, time in future_events[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                title = event.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
                location = event.get("location_name", "–ú–µ—Å—Ç–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")
                print(f"   - {title} {time.strftime('%d.%m %H:%M')} ({location})")

        else:
            print("‚ùå –°–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print()
            print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   - –ù–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ KudaGo")
            print("   - –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–∞–º —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–π")
            print("   - –ü—Ä–æ–±–ª–µ–º—ã —Å API KudaGo")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞: {e}")
        import traceback

        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(test_kudago_date_filter())
