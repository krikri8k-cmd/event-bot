#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ UnifiedEventsService
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from sqlalchemy import create_engine

from config import load_settings
from utils.unified_events_service import UnifiedEventsService


def main():
    print("üß™ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ UnifiedEventsService")
    print("=" * 50)

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        settings = load_settings()
        engine = create_engine(settings.database_url)

        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
        service = UnifiedEventsService(engine)

        # –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π —Å–µ–≥–æ–¥–Ω—è
        print("\nüîç –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π —Å–µ–≥–æ–¥–Ω—è –≤ Bali")
        events = service.search_events_today(city="bali", user_lat=-8.6500, user_lng=115.2167, radius_km=15)

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")

        if events:
            print("\nüìã –ü—Ä–∏–º–µ—Ä—ã —Å–æ–±—ã—Ç–∏–π:")
            for i, event in enumerate(events[:3]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"  {i+1}. {event.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} ({event.get('source', 'unknown')})")
                print(f"     –í—Ä–µ–º—è: {event.get('starts_at')}")
                print(f"     –ú–µ—Å—Ç–æ: {event.get('location_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
                if event.get("venue_name"):
                    print(f"     Venue: {event['venue_name']}")
                if event.get("address"):
                    print(f"     –ê–¥—Ä–µ—Å: {event['address']}")
                print()

        # –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –¢–µ—Å—Ç 2: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π")
        stats = service.get_events_stats(city="bali")

        print("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è Bali:")
        print(f"  –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {stats.get('total', 0)}")
        print(f"  –ü–∞—Ä—Å–µ—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π: {stats.get('parser_events', 0)}")
        print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π: {stats.get('user_events', 0)}")

        # –¢–µ—Å—Ç 3: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è (—Ç–µ—Å—Ç)
        print("\nüíæ –¢–µ—Å—Ç 3: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è")

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        test_event_id = service.save_parser_event(
            source="test",
            external_id="test_001",
            title="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏",
            description="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏",
            starts_at_utc="2025-01-15 10:00:00+00",
            city="bali",
            lat=-8.6500,
            lng=115.2167,
            location_name="–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ",
            location_url="https://example.com",
            url="https://example.com/event",
        )

        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: {test_event_id}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ –ø–æ–∏—Å–∫–µ
        test_events = service.search_events_today(city="bali", user_lat=-8.6500, user_lng=115.2167, radius_km=15)

        test_found = any(event.get("id") == test_event_id for event in test_events)
        if test_found:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø–æ–∏—Å–∫–µ")
        else:
            print("‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø–æ–∏—Å–∫–µ")

        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        from sqlalchemy import text

        with engine.begin() as conn:
            conn.execute(text("DELETE FROM events WHERE id = :event_id"), {"event_id": test_event_id})
            print("üßπ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ")

        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback

        traceback.print_exc()
        return 1

    return 0


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
