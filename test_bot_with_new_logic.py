#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –±–æ—Ç–∞ —Å –Ω–æ–≤–æ–π —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
"""

import logging
from datetime import UTC, datetime

from config import load_settings
from database import get_engine, init_engine
from utils.simple_timezone import get_city_from_coordinates
from utils.ultra_simple_events import UltraSimpleEventsService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def test_bot_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∫–æ—Ç–æ—Ä—É—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ—Ç"""
    print("ü§ñ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ë–û–¢–ê –° –ù–û–í–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–û–ô")
    print("=" * 60)

    settings = load_settings()
    init_engine(settings.database_url)
    engine = get_engine()

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    events_service = UltraSimpleEventsService(engine)

    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    user_lat = -8.675326
    user_lng = 115.230191
    radius_km = 15

    print(f"üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ({user_lat}, {user_lng})")
    print(f"üîç –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞: {radius_km} –∫–º")
    print()

    # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–æ—Ä–æ–¥ (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    print("1Ô∏è‚É£ –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ì–û–†–û–î–ê")
    print("-" * 30)

    try:
        city = get_city_from_coordinates(user_lat, user_lng)
        print(f"üåç –û–ø—Ä–µ–¥–µ–ª–µ–Ω –≥–æ—Ä–æ–¥: {city}")
        print()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞: {e}")
        return

    # 2. –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    print("2Ô∏è‚É£ –ü–û–ò–°–ö –°–û–ë–´–¢–ò–ô")
    print("-" * 30)

    try:
        events = events_service.search_events_today(
            city=city, user_lat=user_lat, user_lng=user_lng, radius_km=radius_km
        )

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(events)}")
        print()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å–æ–±—ã—Ç–∏—è
        for i, event in enumerate(events[:3], 1):
            print(f"   {i}. {event['source_type']}: '{event['title']}'")
            print(f"      –í—Ä–µ–º—è: {event['starts_at']}")
            print(f"      –ú–µ—Å—Ç–æ: {event['location_name']}")
            print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({event['lat']}, {event['lng']})")
            print()

        if len(events) > 3:
            print(f"   ... –∏ –µ—â–µ {len(events) - 3} —Å–æ–±—ã—Ç–∏–π")
            print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ–±—ã—Ç–∏–π: {e}")
        return

    # 3. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    print("3Ô∏è‚É£ –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –í –°–¢–ê–†–´–ô –§–û–†–ú–ê–¢")
    print("-" * 30)

    try:
        formatted_events = []
        for event in events:
            formatted_events.append(
                {
                    "title": event["title"],
                    "description": event["description"],
                    "time_local": event["starts_at"].strftime("%Y-%m-%d %H:%M"),
                    "location_name": event["location_name"],
                    "location_url": event["location_url"],
                    "lat": event["lat"],
                    "lng": event["lng"],
                    "source": event["source_type"],
                    "url": event.get("event_url", ""),
                    "community_name": "",
                    "community_link": "",
                }
            )

        print(f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–±—ã—Ç–∏–π: {len(formatted_events)}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        if formatted_events:
            first = formatted_events[0]
            print("   –ü—Ä–∏–º–µ—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:")
            print(f"   - title: '{first['title']}'")
            print(f"   - time_local: '{first['time_local']}'")
            print(f"   - source: '{first['source']}'")
            print(f"   - location_name: '{first['location_name']}'")

        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        return

    # 4. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è (–∫–∞–∫ –≤ –±–æ—Ç–µ)
    print("4Ô∏è‚É£ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –°–û–ë–´–¢–ò–Ø")
    print("-" * 30)

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        event_id = events_service.create_user_event(
            organizer_id=123456789,
            title="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–∑ –±–æ—Ç–∞",
            description="–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É –±–æ—Ç–∞",
            starts_at_utc=datetime.now(UTC),
            city=city,
            lat=user_lat,
            lng=user_lng,
            location_name="–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ –±–æ—Ç–∞",
            location_url="https://maps.google.com/test",
            max_participants=10,
        )

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å ID: {event_id}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è: {e}")
        print()

    print("=" * 60)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("‚úÖ –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")


if __name__ == "__main__":
    test_bot_logic()
