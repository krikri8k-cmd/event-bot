#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
"""

import asyncio
import logging
from datetime import UTC, datetime

from config import load_settings
from database import get_engine, init_engine
from utils.simple_events import SimpleEventsService
from utils.simple_timezone import format_city_time_info, get_city_from_coordinates

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def test_simplified_architecture():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É"""
    print("üöÄ –¢–ï–°–¢ –£–ü–†–û–©–ï–ù–ù–û–ô –ê–†–•–ò–¢–ï–ö–¢–£–†–´")
    print("=" * 50)

    settings = load_settings()
    init_engine(settings.database_url)
    engine = get_engine()

    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
    events_service = SimpleEventsService(engine)

    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_lat = -8.675326
    user_lon = 115.230191

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥–æ—Ä–æ–¥
    city = get_city_from_coordinates(user_lat, user_lon)
    print(f"üåç –û–ø—Ä–µ–¥–µ–ª–µ–Ω –≥–æ—Ä–æ–¥: {city}")
    print()

    # 1. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –≤ –≥–æ—Ä–æ–¥–µ
    print("1Ô∏è‚É£ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –í–†–ï–ú–ï–ù–ò")
    print("-" * 30)
    print(format_city_time_info(city))
    print()

    # 2. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
    print("2Ô∏è‚É£ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–û–ë–´–¢–ò–ô")
    print("-" * 30)

    try:
        stats = events_service.get_events_stats(city)
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è {stats['city']}:")
        print(f"   üìã –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {stats['total_events']}")
        print(f"   ü§ñ –ü–∞—Ä—Å–µ—Ä–Ω—ã—Ö: {stats['parser_events']}")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö: {stats['user_events']}")
        print(f"   üïí –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ: {stats['date_range']}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        print()

    # 3. –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    print("3Ô∏è‚É£ –ü–û–ò–°–ö –ë–ï–ó –ö–û–û–†–î–ò–ù–ê–¢")
    print("-" * 30)

    try:
        events = events_service.search_events_today(city)
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {len(events)}")

        for event in events:
            print(f"   {event['source_type']}: ID {event['id']} - '{event['title']}'")
            print(f"      –í—Ä–µ–º—è: {event['starts_at']}")
            print(f"      –ú–µ—Å—Ç–æ: {event['location_name']}")
            print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({event['lat']}, {event['lng']})")

        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –±–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: {e}")
        print()

    # 4. –ü–æ–∏—Å–∫ —Å–æ–±—ã—Ç–∏–π —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
    print("4Ô∏è‚É£ –ü–û–ò–°–ö –° –ö–û–û–†–î–ò–ù–ê–¢–ê–ú–ò (15–∫–º)")
    print("-" * 30)

    try:
        events = events_service.search_events_today(city=city, user_lat=user_lat, user_lng=user_lon, radius_km=15)

        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π –≤ —Ä–∞–¥–∏—É—Å–µ 15–∫–º: {len(events)}")

        for event in events:
            print(f"   {event['source_type']}: ID {event['id']} - '{event['title']}'")
            print(f"      –í—Ä–µ–º—è: {event['starts_at']}")
            print(f"      –ú–µ—Å—Ç–æ: {event['location_name']}")
            print(f"      –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ({event['lat']}, {event['lng']})")

        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏: {e}")
        print()

    # 5. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    print("5Ô∏è‚É£ –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –°–û–ë–´–¢–ò–Ø")
    print("-" * 30)

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
        test_event_id = events_service.create_user_event(
            organizer_id=123456789,
            title="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã",
            description="–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ",
            starts_at_utc=datetime.now(UTC),
            city=city,
            lat=user_lat,
            lng=user_lon,
            location_name="–¢–µ—Å—Ç–æ–≤–æ–µ –º–µ—Å—Ç–æ",
            location_url="https://maps.google.com/test",
            max_participants=10,
        )

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å ID: {test_event_id}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è: {e}")
        print()

    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
    print("6Ô∏è‚É£ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï –°–û–ó–î–ê–ù–ò–Ø")
    print("-" * 30)

    try:
        stats = events_service.get_events_stats(city)
        print("üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   üìã –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: {stats['total_events']}")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö: {stats['user_events']}")
        print()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        print()

    print("=" * 50)
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ Timezone –ª–æ–≥–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!")
    print("‚úÖ –ü–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—É –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    print("‚úÖ 3 —Ç–∞–±–ª–∏—Ü—ã + –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã!")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        await test_simplified_architecture()
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        return False


if __name__ == "__main__":
    success = asyncio.run(main())
    exit(0 if success else 1)
