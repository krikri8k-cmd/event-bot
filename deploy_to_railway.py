#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –≤ Railway
"""

import os
import subprocess
import sys


def check_git_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å git"""
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git...")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        result = subprocess.run(["git", "status", "--porcelain"], capture_output=True, text=True, check=True)

        if result.stdout.strip():
            print("üìù –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö:")
            for line in result.stdout.strip().split("\n"):
                print(f"  {line}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–µ–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã
            result = subprocess.run(
                ["git", "status", "--untracked-files=all"], capture_output=True, text=True, check=True
            )

            print("\nüìã –ü–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å:")
            print(result.stdout)

            return True
        else:
            print("‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
            return False

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ git: {e}")
        return False


def commit_changes():
    """–ö–æ–º–º–∏—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è"""
    print("\nüíæ –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")

    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
        subprocess.run(["git", "add", "."], check=True)
        print("‚úÖ –§–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ staging")

        # –ö–æ–º–º–∏—Ç–∏–º
        commit_message = """
üöÄ Deploy: Separate tables architecture + KudaGo integration

‚úÖ Changes:
- Created separate tables: events_parser, events_user
- Migrated all data from old events table
- Integrated KudaGo parser with new architecture
- Cleaned up unused tables
- Updated EventsService for regional routing
- Added Railway environment variables for KudaGo

üèóÔ∏è Architecture:
- events_parser: Parser events (baliforum, kudago)
- events_user: User-created events
- Regional routing by country/city
- Clean database structure (4 tables only)

üéØ Ready for production deployment
        """.strip()

        subprocess.run(["git", "commit", "-m", commit_message], check=True)
        print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã")

        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–º–∏—Ç–∞: {e}")
        return False


def push_to_railway():
    """–ü—É—à–∏—Ç –≤ Railway"""
    print("\nüöÄ –ü—É—à–∏–º –≤ Railway...")

    try:
        # –ü—É—à–∏–º –≤ main –≤–µ—Ç–∫—É (Railway –æ–±—ã—á–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç main)
        subprocess.run(["git", "push", "origin", "main"], check=True)
        print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Railway")

        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ push: {e}")
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å remote –¥–ª—è Railway")
        return False


def check_railway_deployment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è –≤ Railway"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è...")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Railway CLI –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        result = subprocess.run(["railway", "status"], capture_output=True, text=True)

        if result.returncode == 0:
            print("‚úÖ Railway CLI –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(result.stdout)
        else:
            print("‚ÑπÔ∏è Railway CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å –¥–µ–ø–ª–æ–π –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Railway")

    except FileNotFoundError:
        print("‚ÑπÔ∏è Railway CLI –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å –¥–µ–ø–ª–æ–π –≤ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Railway")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è"""
    print("üöÄ –ó–ê–ü–£–°–ö –î–ï–ü–õ–û–Ø –í RAILWAY")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not os.path.exists(".git"):
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω .git –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è")
        print("üí° –£–±–µ–¥–∏—Å—å —á—Ç–æ —Ç—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git
    has_changes = check_git_status()

    if has_changes:
        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if not commit_changes():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è")
            return False

    # –ü—É—à–∏–º –≤ Railway
    if not push_to_railway():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Railway")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–µ–ø–ª–æ—è
    check_railway_deployment()

    print("\nüéâ –î–ï–ü–õ–û–ô –ó–ê–ü–£–©–ï–ù!")
    print("\nüìã –ß—Ç–æ –¥–∞–ª—å—à–µ:")
    print("  1. –ü—Ä–æ–≤–µ—Ä—å –¥–µ–ø–ª–æ–π –≤ Railway Dashboard")
    print("  2. –£–±–µ–¥–∏—Å—å —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    print("  3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π –±–æ—Ç–∞ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è")
    print("  4. –ü—Ä–æ–≤–µ—Ä—å —Ä–∞–±–æ—Ç—É KudaGo –ø–∞—Ä—Å–µ—Ä–∞")

    return True


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
