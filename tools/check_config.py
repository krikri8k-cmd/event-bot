#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from config import load_settings


def check_configuration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞"""

    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    print("=" * 50)

    try:
        settings = load_settings()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        required_settings = [
            ("telegram_token", "TELEGRAM_TOKEN"),
            ("database_url", "DATABASE_URL"),
            ("default_radius_km", "DEFAULT_RADIUS_KM"),
            ("max_radius_km", "MAX_RADIUS_KM"),
            ("radius_step_km", "RADIUS_STEP_KM"),
        ]

        print("üìã –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        missing = []
        for attr, env_name in required_settings:
            value = getattr(settings, attr, None)
            if value:
                if attr == "telegram_token":
                    # –°–∫—Ä—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                    display_value = f"{value[:10]}...{value[-4:]}" if len(value) > 14 else "***"
                elif attr == "database_url":
                    # –°–∫—Ä—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –≤ URL
                    if "@" in value:
                        parts = value.split("@")
                        if len(parts) == 2:
                            display_value = f"{parts[0].split('://')[0]}://***@{parts[1]}"
                        else:
                            display_value = "***"
                    else:
                        display_value = "***"
                else:
                    display_value = value
                print(f"  ‚úÖ {env_name}: {display_value}")
            else:
                print(f"  ‚ùå {env_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–û")
                missing.append(env_name)

        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–º–µ–Ω—Ç–æ–≤
        print("‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–º–µ–Ω—Ç–æ–≤:")
        moments_settings = [
            ("moments_enable", "MOMENTS_ENABLE"),
            ("moment_ttl_options", "MOMENT_TTL_OPTIONS"),
            ("moment_daily_limit", "MOMENT_DAILY_LIMIT"),
            ("moment_max_radius_km", "MOMENT_MAX_RADIUS_KM"),
        ]

        for attr, env_name in moments_settings:
            value = getattr(settings, attr, None)
            if value is not None:
                print(f"  ‚úÖ {env_name}: {value}")
            else:
                print(f"  ‚ùå {env_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–û")
                missing.append(env_name)

        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AI
        print("ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ AI:")
        ai_settings = [
            ("ai_parse_enable", "AI_PARSE_ENABLE"),
            ("ai_generate_synthetic", "AI_GENERATE_SYNTHETIC"),
            ("strict_source_only", "STRICT_SOURCE_ONLY"),
        ]

        for attr, env_name in ai_settings:
            value = getattr(settings, attr, None)
            if value is not None:
                print(f"  ‚úÖ {env_name}: {value}")
            else:
                print(f"  ‚ùå {env_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–û")
                missing.append(env_name)

        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        print("üîó –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π:")
        source_settings = [
            ("enable_meetup_api", "ENABLE_MEETUP_API"),
            ("enable_ics_feeds", "ENABLE_ICS_FEEDS"),
            ("enable_eventbrite_api", "ENABLE_EVENTBRITE_API"),
        ]

        for attr, env_name in source_settings:
            value = getattr(settings, attr, None)
            if value is not None:
                status = "‚úÖ –í–∫–ª—é—á–µ–Ω" if value else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω"
                print(f"  {status} {env_name}: {value}")
            else:
                print(f"  ‚ùå {env_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–û")
                missing.append(env_name)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º ICS —Ñ–∏–¥—ã
        if settings.ics_feeds:
            print(f"  ‚úÖ ICS_FEEDS: {len(settings.ics_feeds)} —Ñ–∏–¥–æ–≤")
            for i, feed in enumerate(settings.ics_feeds[:3], 1):
                print(f"    {i}. {feed}")
            if len(settings.ics_feeds) > 3:
                print(f"    ... –∏ –µ—â–µ {len(settings.ics_feeds) - 3}")
        else:
            print("  ‚ö†Ô∏è ICS_FEEDS: –Ω–µ—Ç —Ñ–∏–¥–æ–≤")

        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("üó∫Ô∏è –ì–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ:")
        geo_settings = [
            ("google_maps_api_key", "GOOGLE_MAPS_API_KEY"),
        ]

        for attr, env_name in geo_settings:
            value = getattr(settings, attr, None)
            if value:
                display_value = f"{value[:10]}...{value[-4:]}" if len(value) > 14 else "***"
                print(f"  ‚úÖ {env_name}: {display_value}")
            else:
                print(f"  ‚ùå {env_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù–û")
                missing.append(env_name)

        print()

        # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if missing:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–´ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:")
            for setting in missing:
                print(f"  ‚Ä¢ {setting}")
            print()
            print("üí° –î–æ–±–∞–≤—å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ app.local.env")
            return False
        else:
            print("‚úÖ –í–°–ï –ù–ê–°–¢–†–û–ô–ö–ò –ö–û–†–†–ï–ö–¢–ù–´!")
            return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False


if __name__ == "__main__":
    success = check_configuration()
    sys.exit(0 if success else 1)
